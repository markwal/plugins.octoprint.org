{
  "docs": [
{
"id": "/plugins/mqtt",
"url": "/plugins/mqtt/",
"date": "2015-04-11 00:00:00 -0500",
"title": "MQTT",
"description": "Adds support for subscribing and publishing to MQTT topics.",
"author": "Franziska Kunsmann, Gina Häußge",
"content": "This is an OctoPrint Plugin that adds support for MQTT to OctoPrint.See the plugin’s README for details on configuration and usage.",
"tags": ["mqtt","helper","notification"]
},

{
"id": "/plugins/growl",
"url": "/plugins/growl/",
"date": "2015-04-14 00:00:00 -0500",
"title": "Growl",
"description": "Get Growl notifications from your OctoPrint installation.",
"author": "Gina Häußge",
"content": "The Growl plugin for OctoPrint allows to send notifications about certain printing events to a Growl instance on yourlocal network. Right now it sends notifications for the following events:  Printjob started  Printjob done  File uploaded (optional)  Timelapse done (optional)ConfigurationYou’ll have to configure the host your Growl service is running on (which is probably not the same machine that your OctoPrint installation is running on), the port it is listening on and - if you secured your growl instance againstnotifications from the network with a password - also the password needed to connect to it.You can do all this via the settings dialog under “Plugins &gt; Growl”. If you have your OctoPrint installation’s bundled discovery plugin also configured with pybonjour support you’ll also be able to see all the Growl instances on your local network that OctoPrint was able to discover there.By default only the notifications for “Printjob started” and “Printjob done” are enabled. If you also want to get notification about the other events, you’ll have to tell Growl. OctoPrint will send them all, but your local Growlinstance needs to be told to also display them. You can do this in the configuration of your Growl service. Thisis how it might look:",
"tags": ["notification"]
},

{
"id": "/plugins/actiontrigger",
"url": "/plugins/actiontrigger/",
"date": "2015-04-17 00:00:00 -0500",
"title": "Action Trigger Plugin",
"description": "Plugin for OctoPrint that handles serial commands sent out by the printer.",
"author": "Pim Rutgers",
"content": "  Its gun do some serial trigger handling yoPlugin for OctoPrint that handles serial commands send out by the printer. These action triggers should be manually added to your firmware if you want to use this add-on.  Basic handler code is:// action:somevariablePlugin reacts to two different situations, door open/close and filament detection.action:door_openaction:door_closedaction:door_open will pause the print and home the X-axis. Pop-up dialog will notify the user, they can decide to accept the pop-up and use the controls. Closing the door will trigger action:door_closed resume the print and close the dialogaction:filamentThis trigger will pause the print and home the X and Y axis, giving the user the opportunity to change out the filament. The print needs to be resumed manually through the UI.",
"tags": ["printing"]
},

{
"id": "/plugins/navbartemp",
"url": "/plugins/navbartemp/",
"date": "2015-04-17 00:00:00 -0500",
"title": "Navbar Temp",
"description": "Display temperatures on navbar",
"author": "Jarek Szczepanski & Cosik",
"content": "Plugin for OctoPrint - displays temperatures on navbarSetupInstall the plugin using Plugin Manager from SettingsNeed new platform support?If you need support for additional platform, please inform us and add such information:  How to read temperature  How to define platform typeAnd be ready for testing.Custom commandPlugin is supporting up to one custom command, in navbar will be displayed raw output of command.Example:Change notes:v 0.13  added support for custom commandsv 0.11  added support for all platforms running under Armbian",
"tags": ["temperature","heater","navbar","temp"]
},

{
"id": "/plugins/gpx",
"url": "/plugins/gpx/",
"date": "2015-04-23 00:00:00 -0500",
"title": "GPX",
"description": "Use OctoPrint with s3g/x3g printers (like FlashForge and older MakerBot)",
"author": "Mark Walker",
"content": "GPX was created by Dr. Henry Thomas in April 2013.  It is a post processingutility that converts gcode into x3g files for printing on MakerBots or theirclones.This plugin wraps the serial communication layer and uses GPX to translate betweengcode and x3g on the fly to make the printer appear to OctoPrint as if it speaksgcode.###ConfigurationAfter installing, you need to tell gpx about your printer. In OctoPrint, GPXadds a settings panel. Two settings are important to set: the type ofprinter and the gcode flavor.The type of printer determines the steps per mm. Gcode is generally inmillimeters and x3g is in stepper motor steps.Gcode flavor means the flavor that your slicer produces. Makerbot Desktop andRepG only produce MakerBot flavor. Slic3r produces either (you can choose inits settings) and Cura produces RepRap flavor.If you have a MakerBot clone then you have a Replicator 1 or Replicator 1 Dualclone. Your printer might look more like a Replicator 2 because it is black andmetal, but its steps per mm is Replicator 1.###Caveats and Known IssuesPlease see the READMEon github for the latest info.",
"tags": ["printer","protocol"]
},

{
"id": "/plugins/customControl",
"url": "/plugins/customControl/",
"date": "2015-04-26 00:00:00 -0500",
"title": "Custom Control Editor",
"description": "Makes custom controls editable via the settings dialog",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin helps you create, edit and delete your custom controls.You can easily access all the options in the settings under “Custom Control Editor”.Right click on a control or the green box to open a context menu.By using the container elements you can easily position the controls where you want.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/octoglow",
"url": "/plugins/octoglow/",
"date": "2015-05-12 00:00:00 -0500",
"title": "OctoGlow",
"description": "Display OctoPrint status on a PiGlow board.",
"author": "Dan Malec",
"content": "The OctoGlow plugin for OctoPrint displays status on a Pimoroni PiGlow attached to a Raspberry Pi.  It displays animations for the following events:  Printer connected  Printjob started  Printjob progress updated  Printjob done  Printjob cancelled  Printjob failedConfigurationThe PiGlow board requires i2c to be enabled on the Raspberry Pi.  Please follow the Pimoroni guide on enabling i2c on the Raspberry Pi.Additionally, the pi user must be added to the i2c group in order to allow OctoPrint to send commands to the PiGlow without needing root privileges:sudo adduser pi i2c",
"tags": ["notification"]
},

{
"id": "/plugins/snapstream",
"url": "/plugins/snapstream/",
"date": "2015-05-22 00:00:00 -0500",
"title": "SnapStream",
"description": "Emulate webcam streaming by showing a sequence of snapshots",
"author": "Mark Walker",
"content": "The default video streamer in the OctoPi image is mjpg-streamer. It works byfairly simply stitching the jpeg images from the webcam into a stream that canbe displayed by the browser. You may want to avoid this stitching and just havejavascript display the jpg images every few hundred milliseconds instead.A couple of reasons might be:      You want to use a browser that doesn’t support mjpeg streams (IE).        You want to reduce your bandwidth and cpu usage on your host.  You can reduce bandwidth and cpu usage by reducing the frame rate onmjpg-streamer, but perhaps the plugin is even lighter weight, try it out onyour hardware and see.SettingsThe plugin has a couple of settings you can change:      Frames per second.    The plugin uses javascript to update the snapshot so the frames are really limited by the browsers ability/willingness to call a timer interval function. Probably best to stay in the slow, reliable, but choppy end of things: 1, 2 or 4 or something like that.        Fallback mode only.    The plugin only takes over and uses snapshots when the stream fails to load.  ",
"tags": ["ui"]
},

{
"id": "/plugins/systemcommandeditor",
"url": "/plugins/systemcommandeditor/",
"date": "2015-06-03 00:00:00 -0500",
"title": "System Command Editor",
"description": "This plugin makes System Commands editable through the OctoPrint WebUI",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin helps you create, edit and delete System commands.You can Access all option in the settings under “Plugins -&gt; System Command Editor”Right Click on a Control or the Green Box to open a context menu.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/editorcollection",
"url": "/plugins/editorcollection/",
"date": "2015-06-04 00:00:00 -0500",
"title": "Editor Collection",
"description": "This plugin is for putting Salandora's editor plugins onto one page",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin moves the Editor’s from Salandora onto a single Page.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/screensquish",
"url": "/plugins/screensquish/",
"date": "2015-06-17 00:00:00 -0500",
"title": "ScreenSquish",
"description": "Scalable UI that does some old fashioned (v2) bootstrap responsive and some collapse etc.",
"author": "Mark Walker",
"content": "Bootstrap 2 “responsive” UI, a single column on your phoneThis is a little plugin that adds an HTML element here, changes some css there ina tweaky way to have the default OctoPrint UI reflow (or squish) for smallerscreen sizes.There are more epic UIs in the works elsewhere, but you can use this plugin untilsomething better comes along.Since it does tweak the current UI that will likely change, it disables itselfon any new version of OctoPrint. My plan is to keep it up to date within a fewdays or even ahead of any official release until such time as it is no longerneeded because of an alternate UI plugin or because bootstrap 3 happened.Go ahead and give it a try and if you don’t like it you can always disable it oruninstall from OctoPrint’s plugin manager.",
"tags": ["mobile","ui"]
},

{
"id": "/plugins/stlviewer",
"url": "/plugins/stlviewer/",
"date": "2015-06-20 00:00:00 -0500",
"title": "STL Viewer",
"description": "Simple stl viewer tab from uploaded files.",
"author": "jneilliii",
"content": "STL ViewerThe STL Viewer plugin is a simple STL Viewer tab for OctoPrint. Viewer control is derived from jsc3d.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["tab","stl"]
},

{
"id": "/plugins/commandsplitter",
"url": "/plugins/commandsplitter/",
"date": "2015-06-21 00:00:00 -0500",
"title": "CommandSplitter",
"description": "Splits multiple commands on one line in GCODE files into multiple lines",
"author": "Gina Häußge",
"content": "This is a small GCODE preprocessor that makes sure that uploaded GCODE file contain only one command per line.GCODE allows putting multiple commands on one line, separated by a : (colon). Since it is currently a bitunclear how firmware should process such lines with regards to included line numbers or checksums, in order toavoid any confusion this plugin can be used to make sure that all such multi-command-lines in uploaded GCODE filesare split into multiple lines first.ExampleIf an uploaded GCODE file contains these lines:G28 X0 Y0 : G28 Z0 ; home all axes; this is a comment with a colon : in the middleM117 Hello there \\:)this plugin will turn them into these lines:G28 X0 Y0G28 Z0; home all axes; this is a comment with a colon in the middleM117 Hello there \\:)Note that it will touch neither colons in comments nor escaped ones. Be careful though, it is currently not completelyclear if all firmwares support escaping the colon as shown above. Better not use any : within your commands if possible.",
"tags": ["gcode","preprocessing"]
},

{
"id": "/plugins/requestspinner",
"url": "/plugins/requestspinner/",
"date": "2015-06-21 00:00:00 -0500",
"title": "RequestSpinner",
"description": "Shows a little spinner in the web frontend when background requests are active",
"author": "Gina Häußge",
"content": "The Request Spinner Plugin puts a little spinner icon in the lower left corner of the OctoPrint web interface wheneverthere are active background requests via AJAX in progress. That provides a bit of feedback about how long your actionstake to get processed by your server and gives you some more indication if stuff is actually happening or not.",
"tags": ["ui","ajax"]
},

{
"id": "/plugins/autoselect",
"url": "/plugins/autoselect/",
"date": "2015-06-27 00:00:00 -0500",
"title": "Autoselect",
"description": "Automatically selects freshly uploaded files for printing if no print job is currently active.",
"author": "Jubaleth, Gina Häußge",
"content": "The Autoselect Plugin will automatically select newly uploaded files forprinting if there is an active connection to a printer and currently no printjob running.",
"tags": ["ux","upload","filemanagement"]
},

{
"id": "/plugins/status_line",
"url": "/plugins/status_line/",
"date": "2015-07-04 00:00:00 -0500",
"title": "StatusLine",
"description": "Display M117 (Display Message) in the SideBar",
"author": "Philippe Vanhaesendonck",
"content": "(Very) simple plugin to which displays the M117 command (Display Message) in the SideBar.",
"tags": ["ui"]
},

{
"id": "/plugins/yamlpatcher",
"url": "/plugins/yamlpatcher/",
"date": "2015-07-07 00:00:00 -0500",
"title": "Yamlpatcher",
"description": "Allows patching up config.yaml through the web interface",
"author": "Gina Häußge",
"content": "The OctoPrint Yamlpatcher Plugin allows patching OctoPrint’s config.yamlthrough a new dialog within OctoPrint’s settings, using easily shareablepatch strings.This allows applying configuration changes that are not easily achievable throughthe UI even for users who don’t feel comfortable manually editing a YAMLconfiguration file. And for those that do feel comfortable with YAML, it isalso is a very fast way to make quick adjustments to configuration settings forwhich no UI inputs exist, e.g. development settings.Before allowing to apply the patch string, the plugin will present the userwith a preview of the changes that will take place, visualizing both addedand removed entries within config.yaml.  ⚠ Note  This plugin primarily targets developers, not endusers. It is not actively maintained since it does what is needed from it for regular OctoPrint development activities. If someone wants to make it more versatile and add more or fix existing functionality, feel free to get in touch about adoption on the community forums about it.UsagePaste a valid patch string into the input field below, then hit the “Preview” button. Make sure the changes look like they should (if a screenshot of a preview was provided along side the patch string, compare!). If they do, hit “Apply”. Then restart your server.Patch formatSee the documentation.",
"tags": ["admin","config"]
},

{
"id": "/plugins/octobullet",
"url": "/plugins/octobullet/",
"date": "2015-07-23 00:00:00 -0500",
"title": "Pushbullet",
"description": "Pushes notifications about finished print jobs via Pushbullet",
"author": "Gina Häußge",
"content": "This plugin adds support for Pushbullet notifications to OctoPrint.At the current state OctoPrint will send a notification when a print job finishes. If a webcam is available, an imageof the print result will be captured and included in the notification.",
"tags": ["notification"]
},

{
"id": "/plugins/eeprom_repetier",
"url": "/plugins/eeprom_repetier/",
"date": "2015-07-28 00:00:00 -0500",
"title": "EEPROM Repetier Editor",
"description": "Makes it possible to change the EEPROM values of Repetier Firmware through OctoPrint",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Repetier Firmware based Machine",
"tags": ["repetier","helper"]
},

{
"id": "/plugins/displayprogress",
"url": "/plugins/displayprogress/",
"date": "2015-08-03 00:00:00 -0500",
"title": "DisplayProgress",
"description": "Displays the print progress on the printer's display",
"author": "jneilliii, Gina Häußge",
"content": "A plugin that sends M117 commands to the printer to display the progressof the print job being currently streamed. The message to display can beconfigured (some placeholders included). By default, an ASCII progress baris rendered with the percentage of the job’s progress.",
"tags": ["printer","display","lcd","progress"]
},

{
"id": "/plugins/eeprom_marlin",
"url": "/plugins/eeprom_marlin/",
"date": "2015-08-30 00:00:00 -0500",
"title": "EEPROM Marlin Editor",
"description": "Makes it possible to change the EEPROM values of Marlin Firmware through OctoPrint",
"author": "Anderson Silva",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Marlin Firmware based Machine",
"tags": ["marlin","helper"]
},

{
"id": "/plugins/stats",
"url": "/plugins/stats/",
"date": "2015-09-13 00:00:00 -0500",
"title": "Printer Statistics",
"description": "Statistics of your 3D Printer",
"author": "Anderson Silva",
"content": "This plugin is designed to show statistics of your printer and estimate power usage in kWh.",
"tags": ["stats","power","usage"]
},

{
"id": "/plugins/automaticshutdown",
"url": "/plugins/automaticshutdown/",
"date": "2015-09-22 00:00:00 -0500",
"title": "AutomaticShutdown",
"description": "Plugin to enable automatic system shutdown after finishing a print job",
"author": "Nicanor Romero Venier",
"content": "This OctoPrint plugin enables the system to be automatically shut down after a print is finished.The user can enable automatic shutdown for each print by using a checkbox in the sidebar.Once the print is finished, a popup will appear with a countdown which lets the user abort the shutdown.",
"tags": ["automatic","shutdown"]
},

{
"id": "/plugins/displayz",
"url": "/plugins/displayz/",
"date": "2015-09-22 00:00:00 -0500",
"title": "DisplayZ",
"description": "Brings back the current Z display in the state sidebar panel",
"author": "Gina Häußge",
"content": "OctoPrint’s state sidebar display panel used to display the current Z heightof the printer’s nozzle.That information is sadly inaccurate - it stems not from actual position informationfrom the printer’s firmware but instead from an attempt at tracking the heightinformation by OctoPrint, which can lag behind, be inaccurate or not work at all in case of prints from SD cards.However, people demanded to get this piece of  information back, inaccurate ornot, so here it is as plugin.",
"tags": ["ui","addon"]
},

{
"id": "/plugins/portlister",
"url": "/plugins/portlister/",
"date": "2015-10-08 00:00:00 -0500",
"title": "PortLister",
"description": "Refreshes the port list in the browser when a printer shows up",
"author": "Mark Walker",
"content": "Automatically notice when a new port is available for connecting.Have you noticed that if you load up the OctoPrint web page when your printer isoff, the printer’s port isn’t in the list?  Then when you turn on the printeryou have to refresh the page to make it show up?  This plugin fixes that.It watches for the device to appear (when you turn it on) and then notifies allthe web clients to refresh the list of ports.It also (if you have autoconnect turned on), will automatically connect to theprinter (if the new port is the same as the one you’ve selected in connectionsettings) after a reasonable (long) delay to wait for the printer to actuallycome on.  The default delay is 20 secs.  It’s settable in config.yaml, ifanybody uses this plugin besides me, I could be talked into a settings page.",
"tags": ["printer","automatic"]
},

{
"id": "/plugins/touchui",
"url": "/plugins/touchui/",
"date": "2015-10-10 00:00:00 -0500",
"title": "TouchUI",
"description": "A touch friendly interface for Mobile and TFT touch modules",
"author": "Paul de Vries",
"content": "This plugin will transform the OctoPrint layout into a Mobile/TFT friendly layout. With larger buttons and a responsive layout down to the smallest resolution possible. It will mimic pointer events as touch, so you can hook up those touchscreens. It also supports a virtual keyboard.All these settings are set client-side, so we won’t interfere with other clients. All settings are stored in your localstorage or as a delicious cookie. You can find the TouchUI settings in a dedicated modal. Remember they’re stored on your device, so if you login with your desktop computer you won’t get the touch interface.  TouchscreensRead more about setting up a touchscreen on our Wiki.ConfigurationThe interface will automatically start when your browser is smaller then 980 pixels in width or if you’re browsing with a touch device. You can turn this manually on and off in the TouchUI settings modal. Alternatively you can force TouchUI to load by adding #touch on the end of your URL.Read more configuration options on our Wiki.  CustomizationYou can change 4 main colors of the interface with the power of LESS. If you would like to change more colors, then you’re free to add your own LESS file. Read more about this and the variables on our wiki.",
"tags": ["ui","touchscreen","mobile"]
},

{
"id": "/plugins/slack",
"url": "/plugins/slack/",
"date": "2015-10-28 00:00:00 -0500",
"title": "Slack",
"description": "Send message to Slack chat when printing events happen",
"author": "Richard Joyce",
"content": "Send messages to your group’s Slack chat when printing events happen! You need to set up an Incoming Webhook integration on the Slack side to use this.Features  Select which events you want to trigger a chat notification for  Customizable messages for each event  Customize bot icon and username in Slack chat  Sends elapsed time of print after finished",
"tags": ["notification"]
},

{
"id": "/plugins/autocalibration",
"url": "/plugins/autocalibration/",
"date": "2015-11-09 00:00:00 -0600",
"title": "Autocalibration",
"description": "Calibrates your printers backlash for the X, Y or Z-axis.",
"author": "Florens Wasserfall (Platsch)",
"content": "This plugin calibrates your printers backlash for the X, Y or Z-axis.How does it work?Make sure your printer is running and connected to OctoPrint before you start the calibration process. The axis moves to home to find the endstop and then slowly away from the endstop to find the point where the backlash is compensated by the moving pulley. Do not interrupt the process, otherwise the backlash would remain 0 regardless of the original value and original extruder offsets are not restored!Requirements and Pitfalls  The Firmware must be Repetier based with active EEPROM-option.SetupInstall via the bundled Plugin Manageror manually using this URL:pip install https://github.com/platsch/OctoPrint-Autocalibration/archive/master.zipThis work is based on the OctoPrint-EEprom-Repetier plugin by Salandora.",
"tags": ["repetier","calibration","backlash"]
},

{
"id": "/plugins/updatefix127",
"url": "/plugins/updatefix127/",
"date": "2015-12-07 00:00:00 -0600",
"title": "Updatefix 1.2.7",
"description": "Fixes an issue in OctoPrint 1.2.7 that prevents updating",
"author": "Gina Häußge",
"content": "This plugin fixes an issue in OctoPrint 1.2.7’s software updater, causing updatesof OctoPrint itself to fail.The plugin monkey-patches the bug causing this issue with the same fix that ispresent in 1.2.8, but only for the affected version 1.2.7.Once version 1.2.8 (which ships with the fix) is detected, the plugin uninstallsitself during startup utilizing the plugin manager.How does it work?After installing the plugin and restarting, the plugin will check if you arerunning OctoPrint version 1.2.7 or 1.2.8.If you are running 1.2.7, it will apply the necessary fix to the loaded class of the Software Update Plugin during start-up of the server (via so called monkey patching). Once your server has started you may then update as usual.If the plugin detects version 1.2.8 as running, it will uninstall itselfand restart the server (since it’s not necessary any more).If you are running neither 1.2.7 nor 1.2.8, the plugin will not do anythingbut change its name and description to hint at the fact that it should be uninstalled.Usually the process will look like the following:  You are running 1.2.7.  You install the plugin and are prompted to restart the server.  You restart the server.  You perform the update to 1.2.8. The server is restarted.  The plugin detects you are now running 1.2.8. It uninstalls itself andrestarts the server.  You have a clean 1.2.8 install.",
"tags": ["fix"]
},

{
"id": "/plugins/eeprom_marlin_printrbot",
"url": "/plugins/eeprom_marlin_printrbot/",
"date": "2015-12-26 00:00:00 -0600",
"title": "EEPROM Printrbot variant of Marlin Editor",
"description": "Makes it possible to change the EEPROM values of Printrbot variant of Marlin Firmware through OctoPrint",
"author": "Ryan Neufeld",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Printrbot variant of Marlin Firmware based Machine",
"tags": ["marlin","helper"]
},

{
"id": "/plugins/active_filters",
"url": "/plugins/active_filters/",
"date": "2016-01-01 00:00:00 -0600",
"title": "Active Filters",
"description": "Save terminal filters status",
"author": "ovidiu",
"content": "This plugin will save the status, active/inactive, of the regex filters in the terminal tab. The save is done local, so if you access OctoPrint on multiple computers, the settings, might vary.",
"tags": ["filters","regex","terminal"]
},

{
"id": "/plugins/title_status",
"url": "/plugins/title_status/",
"date": "2016-01-18 00:00:00 -0600",
"title": "Title Status",
"description": "Show printers status in window title",
"author": "ovidiu",
"content": "Shows the status of the printer (offline, operational, connecting, paused, error… ) in the title of the browser as  Connecting…  Paused…  ERROR !!            = Offline        △ = Printing  ? = Unknown",
"tags": ["title","status"]
},

{
"id": "/plugins/telegram",
"url": "/plugins/telegram/",
"date": "2016-02-25 00:00:00 -0600",
"title": "OctoPrint-Telegram",
"description": "A plugin to send and react on messages before, during and after a print via Telegram Messenger.",
"author": "Fabian Schlenz",
"content": "This plugin integrates Telegram Messenger into Octoprint.You can receive automatic notifications with webcam images before and after a print -and even during a print at customizable heights or after a certain time (e.g. after every5mm of height OR after 10 minutes - whatever happend first).You can also control Octoprint via messages. Send /status to receive the current status,/abort to abort the currently running print or /help to receive a list of available commands.Please have a look at the documentation at github to learn how to register a Telegram bot. This is a needed step in order to make this plugin work.If you have any questions or problems feel free to contact me via Telegram: @fabianonline.",
"tags": ["notification","mobile","progress","control"]
},

{
"id": "/plugins/pushover",
"url": "/plugins/pushover/",
"date": "2016-04-13 00:00:00 -0500",
"title": "Pushover",
"description": "A plugin that send a notification with Pushover when the job is done or is failed",
"author": "Thijs Bekke",
"content": "This plugin adds support for Pushover notifications to OctoPrint.When your job is finished or is failed OctoPrint will send a notification to Pushover. You can configure the sound or priority of the messages.",
"tags": ["notification"]
},

{
"id": "/plugins/redeem",
"url": "/plugins/redeem/",
"date": "2016-04-26 00:00:00 -0500",
"title": "OctoPrint Redeem",
"description": "Control Redeems configuration",
"author": "Elias Bakken",
"content": "The OctoPrint Redeem plugin enables choosing printer configuration for Redeem directly from OctoPrint. Redeem is the firmware for Replicape, and although it can be configured on the command line, it might be better to simply download the configuration file, edit it on a local computer and upload it. All of this can be done directly form the settings window using this plugin.",
"tags": ["redeem","replicape","firmware","control"]
},

{
"id": "/plugins/cost",
"url": "/plugins/cost/",
"date": "2016-06-11 00:00:00 -0500",
"title": "Cost estimator",
"description": "When a file is loaded to be printed, it will display the estimated cost of printing.",
"author": "Jan Szumiec",
"content": "This plugin will display the estimated cost of the print based on filament cost per meter, andexpected printing time.These variables can be set via settings from an admin account. Estimating how much a meter offilament costs, is trivial. For hourly running costs, refer to your printer’s manual, or usea power meter to estimate power consumption in kWh and then simply multiply by the cost of1kWh as billed to you by your electricity provider.",
"tags": ["helper","cost"]
},

{
"id": "/plugins/autoscroll",
"url": "/plugins/autoscroll/",
"date": "2016-06-27 00:00:00 -0500",
"title": "Autoscroll",
"description": "Turn on/off terminal autoscroll when scrolling up/down",
"author": "ovidiu",
"content": "Turn on/off terminal autoscroll when scrolling up/down  turns autoscroll off when scrolling up (rename button to “Now”)  turns autoscroll on when “Now” is pressed or scrolled to the endBehaviour similar to “Console” application, the OSX log viewer.",
"tags": ["terminal","autoscroll"]
},

{
"id": "/plugins/filament_sensor",
"url": "/plugins/filament_sensor/",
"date": "2016-06-29 00:00:00 -0500",
"title": "Filament Sensor",
"description": "Use a filament sensor to pause printing when filament runs out.",
"author": "ovidiu",
"content": "Pause print on GPIO filament runout sensorThe following needs to be added to the config.yaml:plugins:  filament:    pin: XX    bounce: 400where XX represent the GPIO pin where your sensor is connected.An API is available to check the filament sensor status via a GET method to /plugin/filament/status which returns a JSON  {status: \"-1\"} if the sensor is not setup  {status: \"0\"} if the sensor is OFF (filament not present)  {status: \"1\"} if the sensor is ON (filament present)The status 0/1 depends on the type of sensor, and it might be reversed if using a normally closed switch.A build using an optical switch can be found at http://www.thingiverse.com/thing:1646220Note: Needs RPi.GPIO version greater than 0.6.0 to allow access to GPIO for non root and chmod a+rw /dev/gpiomem.This requires a failry up to date system.",
"tags": ["filament","sensor","api"]
},

{
"id": "/plugins/multi_colors",
"url": "/plugins/multi_colors/",
"date": "2016-06-29 00:00:00 -0500",
"title": "Multi Colors",
"description": "Inject GCODE at specified layers to allow multi color printing",
"author": "ovidiu",
"content": "Inject GCODE at specified layers to allow multi color printing based on a regular expressionNote: Currently only compatible with the development version of OctoPrint (1.3.0dev, devel branch).",
"tags": ["color","filament change"]
},

{
"id": "/plugins/gcodebar",
"url": "/plugins/gcodebar/",
"date": "2016-09-01 00:00:00 -0500",
"title": "GCodeBar",
"description": "Send GCode from the sidebar",
"author": "Markus Towara",
"content": "GcodeBarPlugin for Octoprint to allow sending GCode commands from the sidebar.Features:  Hooks into the Terminal Tab and uses same history (scrollable with up / down keys)  Send multiple commands seperated by semicolons  User needs to be logged in and connected to printer to send commandsSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/mtowara/OctoPrint-Gcodebar/archive/master.zip",
"tags": ["gcode","control","sidebar"]
},

{
"id": "/plugins/detailedprogress",
"url": "/plugins/detailedprogress/",
"date": "2016-09-02 00:00:00 -0500",
"title": "Detailed Progress",
"description": "Displays detailed progress on the LCD screen",
"author": "tpmullan",
"content": "A plugin that sends M117 commands to the printer to display the progress of the print job being currently streamed. The message to display can be configured (some placeholders included).By default, It rotates the display every 10 seconds with the following information:  Percentage of the job’s progress  ETL - Estimated time left  ETA - Estimated time of completion",
"tags": ["display","lcd","printer","progress"]
},

{
"id": "/plugins/slicer",
"url": "/plugins/slicer/",
"date": "2016-09-22 00:00:00 -0500",
"title": "Full-featured Slicer",
"description": "A full-blown GUI-based slicer. Rotate and scale model; slice multiple STL files at a time; set layer height and other slicing settings.",
"author": "Kenneth Jiang",
"content": "Slicer plugin offers useful features that OctoPrint’s built-in slicer doesn’t have:  Rotate, scale, and move STL models.  Slice multiple STLs at a time. Split 1 STL into unconnected parts.  Circular print bed support (do you have a delta printer?).  High-light overhang areas. Automatically orient the model for better result (“lay flat”).  Slice based on Cura profiles you upload to OctoPrint.  Customizable slicing settings, including Basic (layer height, bed temperature …) and Advanced (print speed, start/end G-code …).  Slic3r support (when Slic3r plugin is installed).  More is coming…",
"tags": ["slicer","gcode","stl"]
},

{
"id": "/plugins/m33fio",
"url": "/plugins/m33fio/",
"date": "2016-10-25 00:00:00 -0500",
"title": "M33 Fio",
"description": "Allows viewing uploaded models, using a Micro 3D printer, modifying a slicer profile and model before slicing, uploading OBJs and other 3D file formats, hosting a webcam stream, and much more",
"author": "donovan6000",
"content": "M33 Fio extends OctoPrint’s capabilities to include the following features:  Adds a model viewer tab to OctoPrint’s interface where any uploaded model can be viewed  Allows importing OBJ, M3D, AMF, VRML, COLLADA, and 3MF files into OctoPrint  Updates OctoPrint’s list of available serial ports in real time  Includes an OctoPrint instance manager that can create and terminate OctoPrint instances which allows easily running multiple printers on the same host  Adds support for the Micro 3D printer  Wraps groups of buttons in OctoPrint’s controls tab into sections that can be collapsed and expanded  Capable of hosting a webcam stream and configuring OctoPrint to use it  Disables the hosts sleep functionality when printing  Includes a slicer profile editor that allows customizing everything in the selected slicer profile before slicing  Includes a model editor that allows modifying a model before slicing and can perform operations like moving, rotating, scaling, cutting, merging, cloning, and importing other models into the scene",
"tags": ["m33 fio","micro 3d","helper","ui"]
},

{
"id": "/plugins/M117NavBar",
"url": "/plugins/M117NavBar/",
"date": "2016-10-27 00:00:00 -0500",
"title": "OctoPrint-M117NavBar",
"description": "Plugin to send M117 gcode messages to the top navbar of OctoPrint.",
"author": "jneilliii",
"content": "M117NavbarThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client. It will display M117 gcode content in the header.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode"]
},

{
"id": "/plugins/M117PopUp",
"url": "/plugins/M117PopUp/",
"date": "2016-10-27 00:00:00 -0500",
"title": "OctoPrint-M117PopUp",
"description": "Plugin to send M117 gcode messages to the web interface.",
"author": "jneilliii",
"content": "M117PopUpThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client. It utilizes OctoPrint’s built in alerting system to pop up the messages being sent via M117 gcode command.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode"]
},

{
"id": "/plugins/nautilus",
"url": "/plugins/nautilus/",
"date": "2016-10-27 00:00:00 -0500",
"title": "Nautilus - mobile shell for OctoPrint",
"description": "Customised user interface, that has been optimised for iOS devices.",
"author": "ovidiu",
"content": "A customised user interface for OctoPrint, that has been optimised for iOS devices.The plugin requires the Nautilus iOS app which is available on Apple AppStore.Starting with version 2 of the iOS application, support for multiple printers can be added via in-app purchase.  Multi-printer configuration is supported only on devices with iCloud enabled.Read more…",
"tags": ["iOS","iphone","ipad"]
},

{
"id": "/plugins/filemanager",
"url": "/plugins/filemanager/",
"date": "2016-12-09 00:00:00 -0600",
"title": "FileManager",
"description": "A simple filemanager for OctoPrint",
"author": "Marc Hannappel (Salandora)",
"content": "A simple file manager.",
"tags": ["ui","files"]
},

{
"id": "/plugins/filament_sensor_reloaded",
"url": "/plugins/filament_sensor_reloaded/",
"date": "2017-01-06 00:00:00 -0600",
"title": "Filament Sensor Reloaded",
"description": "Use a filament sensor to pause printing when filament runs out.",
"author": "kontakt",
"content": "Pause printing when the 3D printer runs out of filament.Designed as an overhaul and upgrade of the Filament Sensor plugin by MoonshineSG, this plugin is simpler to use and configure.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/smsnotifier",
"url": "/plugins/smsnotifier/",
"date": "2017-01-10 00:00:00 -0600",
"title": "SMS Notifier (with Twilio)",
"description": "Recieve SMS notifications when OctoPrint jobs are complete.",
"author": "Richard Bteman",
"content": "Recieve email notifications when OctoPrint jobs are complete.",
"tags": ["notification"]
},

{
"id": "/plugins/fullscreen",
"url": "/plugins/fullscreen/",
"date": "2017-01-16 00:00:00 -0600",
"title": "Fullscreen Webcam",
"description": "Open the webcam feed in fullscreen mode with extra details about the printjob",
"author": "Paul de Vries",
"content": "This plugin will allow you to open the webcam feed in fullscreen mode by double clicking the image. It will show a bar at the bottom of the image with information about print time, remaining time, temperatures and a pause button.",
"tags": ["ui","display","webcam"]
},

{
"id": "/plugins/freemobilenotifier",
"url": "/plugins/freemobilenotifier/",
"date": "2017-01-25 00:00:00 -0600",
"title": "OctoPrint_FreeMobile-Notifier",
"description": "Octoprint plugin for print completion notifications using Free (Free is a French telecommunications company)",
"author": "Antoine CAVARD",
"content": "Receive SMS notifications when OctoPrint jobs are complete.",
"tags": ["notification"]
},

{
"id": "/plugins/psucontrol",
"url": "/plugins/psucontrol/",
"date": "2017-01-25 00:00:00 -0600",
"title": "PSU Control",
"description": "Control ATX/AUX power supply",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-PSUControl for information on configuration.",
"tags": ["ui","power","atx","psu","control"]
},

{
"id": "/plugins/slic3r",
"url": "/plugins/slic3r/",
"date": "2017-02-07 00:00:00 -0600",
"title": "OctoPrint-Slic3r",
"description": "Adds support for slicing via Slic3r from within OctoPrint",
"author": "Javier Martínez Arrieta, Eyal Soha",
"content": "Slic3r plugin for OctoPrintWARNINGThis plugin has been successfully tested for the following cases:  Linux: Slic3r’s stable versions 1.1.7 and 1.2.9 (tests done under a Raspberry Pi 2, but it should work for other Linux distributions).  Windows: Slic3r works for version 1.2.9, not doing it for version 1.1.7.SetupIn order to install the plugin, go to Settings -&gt; Plugin Manager and click on ‘Get more…’:You’ll see an option to add it from an URL. Add https://github.com/OctoPrint/OctoPrint-Slic3r/archive/master.zip an click on ‘Install’ button.At this moment, the plugin will be installed, but Slic3r must be downloaded and configured, which can be done following these steps:      If OctoPrint is running under a Raspberry Pi, you can use the following script to install Slic3r (unfortunately precompiled packages do not work for RPI’s architecture). For that purpose, copy the following code in a file (i.e. slic3r_install.sh).         #!/bin/sh   echo \"Shell script created by Javier Martínez Arrieta for Slic3r installation\\n\" #Ask the user for a version echo \"Please indicate which version you desire to be installed (e.g. 1.1.7)\" read version echo \"The installation of Slic3r takes a long time. PLease be patient\" cd $HOME echo \"Installing required libraries and dependencies...\" sudo apt-get install git libboost-system-dev libboost-thread-dev git-core build-essential libgtk2.0-dev libwxgtk2.8-dev libwx-perl libmodule-build-perl libnet-dbus-perl cpanminus libextutils-cbuilder-perl gcc-4.7 g++-4.7 libwx-perl libperl-dev sudo cpanm AAR/Boost-Geometry-Utils-0.06.tar.gz Math::Clipper Math::ConvexHull Math::ConvexHull::MonotoneChain Math::Geometry::Voronoi Math::PlanePath Moo IO::Scalar Class::XSAccessor Growl::GNTP XML::SAX::ExpatXS PAR::Packer echo \"Cloning Slic3r repository...\" git clone https://github.com/alexrj/Slic3r.git cd Slic3r git checkout $version echo \"Building and testing Scli3r...\" sudo perl Build.PL echo \"If everything was installed properly,you should be able to run Slic3r with the command ./slic3r.pl\"            Save the file and allow execution giving permission. Using a terminal, it would be chmod +x slic3r_install.sh (or the name given to the file).     chmod +x slic3r_install.sh        Now that you have permission to execute it, type ./slic3r_install.sh and press ‘Enter’. If it is the first time executing the installer, take into account that it can take about 30 minutes or even more.     ./slic3r_install.sh        At the beggining of the installation, you will be asked which version should be installed (available versions at http://slic3r.org/download)            If you get an out of memory error it’s because Raspberry Pi doesn’t have enough swap memory to build Slic3r by default. You will need to increase the swap size. To do this, run sudo nano /etc/dphys-swapfile and set CONF_SWAPSIZE=1000 then save and reboot. After reboot, run free -h and confirm that total swap size is around 1000MB.        Execute OctoPrint and go to Settings (or restart when you are asked after installing the plugin). Slic3r should appear in Plugins list:            In ‘General’, you should put the following path for the executable (supposing the execution of the script, the path would be /home/pi/Slic3r/slic3r.pl). Note: If running in Windows, write the path to slic3r-console:            Before importing the profile, you have to export a file with the Slic3r’s configuration. For that purpose, open Slic3r, and select File-&gt; Export Config…            Save the file with the desired name (e.g. config.ini):            Once done, in ‘Profiles’ click ‘Import Profile…’ button:            Click on ‘Browse…’ and search for the profile. Once done, save with the name and identifier wished by clicking ‘Confirm’:            Click ‘Save’ to confirm Slic3r settings:            Now you can slice your stl files:      ",
"tags": ["slic3r","gcode","stl"]
},

{
"id": "/plugins/tobecaplugin",
"url": "/plugins/tobecaplugin/",
"date": "2017-02-16 00:00:00 -0600",
"title": "Tobeca Plugin",
"description": "Plugin for OctoPrint that adds a special tab with commands for the Tobeca 3d printer.",
"author": "Saymtech",
"content": "Adding a Tobeca (French 3D Printer) tab with commands:  Autotune PID : Sending the M303 Gcode with selecting tool, temperature  (parameter C=8)  Z-Probe-Offset : Sending the M851 Gcode with selecting the value  Home XYZ : Sending the G28 Gcode, because Home Z is harzardous with Z-Probe",
"tags": ["printing"]
},

{
"id": "/plugins/roomtemp",
"url": "/plugins/roomtemp/",
"date": "2017-03-02 00:00:00 -0600",
"title": "Room Temperature",
"description": "Display room temperature on navbar",
"author": "Frederic Moutin",
"content": "Plugin that displays room temperature on navbarBased on OctoPrint-NavbarTemp by imrahil (https://github.com/imrahil/OctoPrint-NavbarTemp)This plugin displays room temperature on navbar via a ds18b20 sensor connected to pin n°4 of your raspberry PiSetup:1 - Connect your ds18b20 sensor to your Pi (see Howto below)2 - Install the roomTemp plugin using Plugin ManagerHowto: Connecting your ds18b20 sensor1 - Connecting your ds18b20 sensor to the Pi:2 - Then connect to your Octopi via ssh.3 - we first need to open up the boot config file, this can be done by running the following command:\tsudo nano /boot/config.txt4 - At the bottom of this file enter the following.\tdtoverlay=w1-gpio5 - Once done save &amp; exit by pressing ctrl x and then y.6 - Now reboot the Pi by running the following command.\tsudo reboot7 - Enjoy !!",
"tags": ["ui"]
},

{
"id": "/plugins/touchtest",
"url": "/plugins/touchtest/",
"date": "2017-03-05 00:00:00 -0600",
"title": "Touchtest Bed Leveling",
"description": "A simple tool to move the extruder to different touch points around the perimeter of the print bed. Useful for bed leveling.",
"author": "Daniel Miller",
"content": "Touch Test plugin for OctoPrint adds a new sidebar panel, essential for manual bed leveling.A simple 3x3 grid of buttons allows the user to move the printhead to all 4 corners and edges of the printbed, where you can perfotm “the paper test”.More info at: https://github.com/Peaches491/OctoPrint-Touchtest",
"tags": ["ui","control","calibration","leveling","sidebar"]
},

{
"id": "/plugins/ledstripcontrol",
"url": "/plugins/ledstripcontrol/",
"date": "2017-03-10 00:00:00 -0600",
"title": "LEDStripControl",
"description": "Control RGB LED Strips via your Raspberry Pi and GCode.",
"author": "Uriah Welcome",
"content": "OctoPrint Plugin that intercepts M150 GCode commands and controls local GPIOs on your Pi.Implements the M150 command syntax from the latest Marlin.M150: Set Status LED Color - Use R-U-B for R-G-BM150 R255       ; Turn LED redM150 R255 U127  ; Turn LED orangeM150            ; Turn LED offM150 R U B      ; Turn LED white",
"tags": ["raspberry pi","led","rgb","gcode"]
},

{
"id": "/plugins/gcodesystemcommands",
"url": "/plugins/gcodesystemcommands/",
"date": "2017-03-14 00:00:00 -0500",
"title": "GCODE System Commands",
"description": "Define G-Code commands that execute local system commands",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-GCodeSystemCommands for information on configuration.",
"tags": ["gcode","command"]
},

{
"id": "/plugins/enclosure",
"url": "/plugins/enclosure/",
"date": "2017-03-15 00:00:00 -0500",
"title": "OctoPrint-Enclosure",
"description": "Control printer environment (Temperature control / Lights / Fans and Filament Sensor) using Raspberry Pi GPIO",
"author": "Vitor Henrique",
"content": "This plugin is intended to control your printer enclosure using raspberry pi GPIO (At the moment this plugin only support raspberry pi).A list of things that you can do:  Add temperature sensors on your enclosure or near your printer  Add active heaters on your enclosure and keep the temperature nice and high for large ABS  Use custom Gcode to control rapsberry pi GPIO  Use custom Gcode to control neopixel  Use custom Gcode to control enclosure temperature  PWM controlled outputs  PWM controlled outputs based on temperature sensor  Active cooling for good PLA printing  Schedule GPIO’s to turn on and off with a fixed period of time during printing.  Mechanical buttons to pause and resume printer jobs  Mechanical buttons to send GCODE to the printer  Mechanical buttons to control raspberry pi GPIO  Multiple filament sensors for dual or more extruders  Alarm when enclosure temperature reaches some sort of value  Notifications using IFTTT when events happen (temperature trigger / print events / etc)  Add sub-menus on navbar to quick access outputs and temperature sensorsThere is also an API that can be used to interact with the plugin with other software",
"tags": ["filament","sensor","temperature","humidity","control","fan","lights","DHT22","DHT11","AM2302","DS18B20","GCODE","NEOPIXEL","ws2812b","SI7021","BME280","TMP102"]
},

{
"id": "/plugins/OctoRemote",
"url": "/plugins/OctoRemote/",
"date": "2017-03-29 00:00:00 -0500",
"title": "OctoPrint-Octoremote",
"description": "Control your 3D-Printer with an Arduino and a Keypad or a custom remote",
"author": "Pascal Krumme",
"content": "OctoRemote enables you to perform all usual printer movements with a simple keypress. Current version implements moving the X-, Y- and Z-Axis, homing and controlling up to four extruders.Movement distance of the extruders can also be controlled via the keypad. An embedded version of the remote controller is in the making and will be released soon.",
"tags": ["printing","remote","arduino","genuino","control","keypad","remotecontrol","ui"]
},

{
"id": "/plugins/tempsgraph",
"url": "/plugins/tempsgraph/",
"date": "2017-03-29 00:00:00 -0500",
"title": "OctoPrint-Tempsgraph",
"description": "Replaces the temperature graph with an interactive and zoomable one",
"author": "Robin Vanhove",
"content": "This plugin adds some features to the temperature graph :  exact values on hover  zooming  panning  exportUsage :  hover over the graph to show date and temperatures under the cursor  drag to zoom  shift + drag to pan  double click to reset axes / autoscale",
"tags": ["interactive graph","temperature plot","zoom","ui"]
},

{
"id": "/plugins/temperaturefailesafe",
"url": "/plugins/temperaturefailesafe/",
"date": "2017-04-14 00:00:00 -0500",
"title": "TemperatureFailsafe",
"description": "Execute shell commands when temperatures violate thresholds",
"author": "Uriah Welcome",
"content": "OctoPrint Plugin that executes shell commands on temperature violations.",
"tags": ["raspberry pi","temperature"]
},

{
"id": "/plugins/finetunerptr",
"url": "/plugins/finetunerptr/",
"date": "2017-04-23 00:00:00 -0500",
"title": "OctoPrint-Finetunerptr",
"description": "Control important maintenance and calibration settings easy accessible from a dropdown-button in the navbar.",
"author": "Andreas Bruckmann",
"content": "Clean and structured UI for Repetier-Firmware based printers. Helps you in maintenance situations as it keeps the most important tools always accessible.",
"tags": ["repetier","repetier firmware","maintenance","control","calibration","helper","ui","ux","administration"]
},

{
"id": "/plugins/octoprint-grbl-plugin",
"url": "/plugins/octoprint-grbl-plugin/",
"date": "2017-05-11 00:00:00 -0500",
"title": "Grbl support for OctoPrint",
"description": "Support Grbl style GCODE for using CNCs and Laser engravers with OctoPrint.",
"author": "mic159",
"content": "This plugin modifies the gcode sent and recieved to translate what is needed.NOTE Additional configuration required:  Serial Connection &gt; Advanced options &gt; “Hello” command = M5  Features &gt; Send a checksum with the command &gt; Never",
"tags": ["grbl","CNC","Laser","GCODE","protocol"]
},

{
"id": "/plugins/OctoPNP",
"url": "/plugins/OctoPNP/",
"date": "2017-05-19 00:00:00 -0500",
"title": "OctoPNP",
"description": "OctoPrint plugin for camera based pick 'n place operations",
"author": "Florens Wasserfall",
"content": "OctoPNP is an extension that allows Octoprint to control printers and similar devices with additional hardware for handling of SMD-parts (and potentially arbitrary objects). It currently requires the following hardware extensions:  A Tray consisting of a grid of boxes to store SMD parts in a defined position  A head camera to locate the exact part position on the tray  A (second) bed camera to precisely align the parts during the placing operation  A vacuum nozzle to grip partsOpenCV is used for the image processing part to measure exact positions and rotations of objects for accurate placing.For details and documentation please refer to the project’s github repository.This plugin is developed during a research project for integrated printing of electronics (wires and SMD-components) with FDM-printers.The development branch of the Slic3r extensions for routing circuits in a 3D-object by importing EAGLE schematics can be found at https://github.com/platsch/Slic3r/tree/electronics.",
"tags": ["pick and place","printer","control","camera","external objects"]
},

{
"id": "/plugins/Octoslack",
"url": "/plugins/Octoslack/",
"date": "2017-05-20 00:00:00 -0500",
"title": "Octoslack",
"description": "An OctoPrint plugin for monitoring your printer and prints via Slack, Mattermost, Pushbullet, Pushover, or Rocket.Chat",
"author": "Chris Fraschetti",
"content": "An OctoPrint plugin for monitoring your printer and prints via Slack, Mattermost, Pushbullet, Pushover, Rocket.Chat, or Riot/MatrixFeatures  Support for Slack, Mattermost, Pushbullet, Pushover, Rocket.Chat, &amp; Matrix based platforms (e.g. Riot)  Monitor both print status as well as printer connectivity status  Respond to Slack commands to check print status or cancel/pause/resume a print          Each command can be individually enabled/disbaled or flagged as restricted which limits the command(s) to specific users      Requires use of the Slack API Token        Customizable messages          Slack and Mattermost support for a fallback message (e.g. mobile notification)      Pushover support for event specific sound and priority settings        Support for posting to one more channels as well as event level channel overrides  Support for inclusion of RasPi temperature, bed temperature, nozzle temperates, nozzle height, and device IP(s)  Support for local system command execution  Slack bot name/icon/emoji customizations          Requires use of the Slack API Token        Optional inclusion of printer snapshot images with each message          Support for snapshot hosting via Amazon S3, Minio, Imgur (with album support), Slack attachments, Pushover, Pushbullet, Rocket.Chat, or Matrix      Slack attachments requires use of the Slack API Token        Optional upload of rendered timelapse video to configured hosting service          Currently excludes Imgur, Pushover, Rocket.Chat, &amp; Matrix        Support for additional snapshot images from IP camerasSupported Events  Print started  Print failed  Print cancelling  Print cancelled  Print paused  Print resumed  Print finished  Print progress (% complete)  Print progress (time interval)  Print progress (Z height change)  G-code sent to the printer  G-code received from the printer (including filament runout messages)  Timelapse render started  Timelapse render finished  Timelapse render failed  File analysis started  File analysis finished  OctoPrint error  OctoPrint started  OctoPrint stopped  Printer connecting  Printer connected  Printer disconnecting  Printer disconnected",
"tags": ["slack","mattermost","pushbullet","pushover","rocket chat","matrix","riot","notification","progress","mobile","monitor","monitoring","remote monitoring","filament runout","s3","imgur","minio","gcode","camera","webcam","eta","finish time","print time","snapshots","status"]
},

{
"id": "/plugins/actioncommands",
"url": "/plugins/actioncommands/",
"date": "2017-06-30 00:00:00 -0500",
"title": "Action Commands",
"description": "Adds handling for user-definable action commands.",
"author": "Ben Lye",
"content": "Adds handling for custom action commands to OctoPrint. Action commands are sent from the RepRap machine in the form //action:command.The plugin allows OctoPrint to execute a system command or send G-code to the printer in response to an action command.UsageAs of the latest Marlin bugfix-1.1.x version, the command M118 can be used to echo output to serial, meaning that M118 //action:dostuff would cause this plugin to try to handle the dostuff command when //action:dostuff was echoed back on the serial console.A future application of the plugin would be to add actions in the RepRap machine’s firmware so that hosts could respond.  For example, when Marlin is killed because something is wrong it would echo //action:poweroff and the attached OctoPrint instance could use this action command to trigger the printer’s power outlet to switch off.Action Command References  OctoPrint Documentation  RepRap Wiki",
"tags": ["action","actions","commands","action command"]
},

{
"id": "/plugins/anywhere",
"url": "/plugins/anywhere/",
"date": "2017-07-01 00:00:00 -0500",
"title": "OctoPrint Anywhere",
"description": "Remote monitoring and control of your 3D printers over the internet. ANYWHERE. ON YOUR PHONE. No more port forwarding or VPN.",
"author": "Kenneth Jiang",
"content": "Please note: OctoPrint Anywhere will be succeeded by The Spaghetti Detective, a faster and more powerful remote monitoring tool. It also detects print failures using AI. We strongly urge you to install that plugin instead.Why OctoPrint Anywhere?Do you want to have a quick glance at the realtime webcam feed of your running print while you are at work, grocery-shopping, or from any place with internet access?Do you wish you had an easy way to remotely adjust the temperature, cancel or pause the print in case things go wrong, all from your phone?If so, OctoPrint Anywhere is for you.OctoPrint Anywhere streams the webcam feed, bed/nozzle temperature, and other critical status from your 3D printer to your phone via the internet. Now you don’t have to be on the same WiFi network as the OctoPrint to monitor and control your 3D printer. No more messing with your router to set up port forwarding (a security risk too) or VPN.Highlights of OctoPrint Anywhere  Webcam feed on your phone. Extremely low latency (usually &lt;3s).  Real-time feed on temperatures and status of active print. Pause or cancel the active print.  Bandwidth-efficiency. Streams data only when you are watching. Data transmission immediately stops when browser tab goes to background.  Sharing realtime webcam feed with your friends with an encrypted link!  Access to your timelapses anywhere so that you can show them off! Sharing them too!  Remote control of X/Y/Z movement.  Seeing the IP address of your OctoPrint.  Check status of all your 3D printers on the same page at a glance.  Many more to come…Screenshots                                Webcam Feed                                            Print Status Control                                            Webcam Sharing                                            Temperature Adjustment                                            On iPad or Laptop            Installation And Setup In 6 Easy Steps                Step 1                    Step 2                    Step 3                    Step 4                    Step 5                    Step 6    Questions? Comments? Email k@getanywhere.io",
"tags": ["remote","monitor","monitoring","phone","control","webcam","port forwarding","internet"]
},

{
"id": "/plugins/BLTouch",
"url": "/plugins/BLTouch/",
"date": "2017-07-14 00:00:00 -0500",
"title": "OctoPrint-BLTouch",
"description": "Simple plugin to add BLTouch controls to the Control tab.",
"author": "jneilliii",
"content": "BLTouchSimple plugin to add BLTouch controls to the Control tab.ScreenshotGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["BLTouch"]
},

{
"id": "/plugins/polarcloud",
"url": "/plugins/polarcloud/",
"date": "2017-07-14 00:00:00 -0500",
"title": "Polar Cloud",
"description": "Connects OctoPrint to the Polar Cloud so you can easily monitor and control OctoPrint outside of your local network",
"author": "Mark Walker",
"content": "Easily Monitor Your Prints from AnywhereThe Polar Cloud at polar3d.com is accessible fromanywhere, inside or outside of the printer’s local network.Print QueueYou can prepare multiple prints, queue them up and send them one by one to yourprinterManage Multiple PrintersYou can connect more than one printer to your Polar Cloud account and managethem all from one place.Object LibraryYou can upload your objects to Polar Cloud, share them with other cloudmembers, and send them to your printer.README - Getting StartedThere’s a few extra command line steps to support timelapses in the PolarCloud. You can get started without them though. Please read the additional infoin the README",
"tags": ["cloud","remote access","polarcloud"]
},

{
"id": "/plugins/costestimation",
"url": "/plugins/costestimation/",
"date": "2017-07-16 00:00:00 -0500",
"title": "CostEstimation",
"description": "Displays the estimated print cost for the loaded model",
"author": "Sven Lohrmann",
"content": "This OctoPrint plugin displays the estimated print cost for the loaded model. The print cost includes the price for the used filament the maintenance and operating cost for the printer as well as the depreciation of the printer.Features  Calculation based on the provided filament length  Customizable currency symbol  Hide cost if not logged in (optional)  Support for multiple extruders  Support for filament profiles with Filament Manager Plugin",
"tags": ["cost","ui"]
},

{
"id": "/plugins/YouTubeLive",
"url": "/plugins/YouTubeLive/",
"date": "2017-07-23 00:00:00 -0500",
"title": "OctoPrint-YouTubeLive",
"description": "Simple plugin to add a YouTube Live tab to OctoPrint.",
"author": "jneilliii",
"content": "YouTube LivePlugin that adds a YouTube Live tab to OctoPrint with the capability of starting and stopping a live stream that is created by reencoding the mjpg stream configured in OctoPrint’s Webcam &amp; Timelapse settings.Note: OctoPrint’s webcam stream requires using a full url path with an ip address, ie http://192.168.1.2:8080/?action=streamScreenshotsPrerequisitesIn order to stream please follow the instructions here.  If you are just wanting to watch a stream enter the channel id in settings, no other prerequisites required.SettingsOnce installed enter your YouTube’s channel id (Advanced Account Settings) and your YouTube stream id (YouTube Live Dashboard) into the YouTube Live plugin settings.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["YouTube","Live Stream"]
},

{
"id": "/plugins/simpleemergencystop",
"url": "/plugins/simpleemergencystop/",
"date": "2017-07-23 00:00:00 -0500",
"title": "Simple Emergency Stop",
"description": "Add an emergency stop buton on NavBar!",
"author": "Sebastien Clement (SebClem)",
"content": "AboutA simple plugin that adds an emergency stop button on NavBar.You can chose between 2 type of button, the big one, or little one.If you need more information, you can find the project’s Github Page here.",
"tags": ["ui","action","command","control","gcode","emergency","stop"]
},

{
"id": "/plugins/eeprom_MPSelectMini",
"url": "/plugins/eeprom_MPSelectMini/",
"date": "2017-08-13 00:00:00 -0500",
"title": "EEPROM Editor for Monoprice Select Mini",
"description": "Makes it possible to change the EEPROM values of the Monoprice Select Mini or Malyan M200 Firmware through OctoPrint",
"author": "Brian Ruhmann",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Monoprice Select Mini or Malyan M200 3D Printer.",
"tags": ["malyan","eeprom","monoprice","helper"]
},

{
"id": "/plugins/Hangprinter",
"url": "/plugins/Hangprinter/",
"date": "2017-08-20 00:00:00 -0500",
"title": "OctoPrint-Hangprinter",
"description": "This plugin provides some useful hangprinter control elements. It can be used for setting up and calibration of a Hangprinter.",
"author": "Mario Lukas",
"content": "The controls can be used to unwind all gears seperatly. The bottom form can be used to enter the measurements for the hangprinter setup. By pressing the “calculate values” Button, all values are calculated. Pressing the “set values to EEPROM” will save the values in the EEPROM of the printer. Keep in mind that EEPROM option is not activated in the Hangprinter Marlin Firmware by default. You need to enable this Option.http://plugins.octoprint.org/plugin/hangprinter/",
"tags": ["Hanprinter","controls","calibration","ui"]
},

{
"id": "/plugins/filamentmanager",
"url": "/plugins/filamentmanager/",
"date": "2017-08-22 00:00:00 -0500",
"title": "FilamentManager",
"description": "Filament Manager for OctoPrint",
"author": "Sven Lohrmann",
"content": "This OctoPrint plugin helps to manage your filament spools.Features  Replacing filament volume with weight in sidebar  Software odometer to measure used filament  Warn if print exceeds remaining filament on spool  Assign temperature offset to spools  Automatically pause print if filament runs out  Import &amp; export of spool inventory  Support for PostgreSQL as database for multiple instances",
"tags": ["ui","filament","manager"]
},

{
"id": "/plugins/filetypes",
"url": "/plugins/filetypes/",
"date": "2017-08-23 00:00:00 -0500",
"title": "Filetypes",
"description": "Let you select file types visible in upload dialog",
"author": "thelongrunsmoke",
"content": "Small and simple plugin. Now you can specify what kind of files you want to see in upload dialog.",
"tags": ["stl","gcode","ui","upload"]
},

{
"id": "/plugins/custombackground",
"url": "/plugins/custombackground/",
"date": "2017-08-27 00:00:00 -0500",
"title": "OctoPrint-CustomBackground",
"description": "Plugin to change the background image on the temperature graph.",
"author": "jneilliii",
"content": "Custom BackgroundThis plugin allows you to upload an image to your OctoPrint instance like a gcode file and it will replace the default background of the Temperature graph with that image.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["background","image","temperature_graph"]
},

{
"id": "/plugins/tplinksmartplug",
"url": "/plugins/tplinksmartplug/",
"date": "2017-09-03 00:00:00 -0500",
"title": "OctoPrint-TPLinkSmartplug",
"description": "Plugin to control TP-Link Smartplug devices from OctoPrint web interface.",
"author": "jneilliii",
"content": "TP-Link SmartplugWork inspired by OctoPrint-PSUControl and TP-Link WiFi SmartPlug Client, this plugin controls a TP-Link Smartplug via OctoPrint’s nav bar.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your TP-Link Smartplug device. Adjust additional settings as needed.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.2 your gcode command would be M80 192.168.1.2        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["TPLink","TP-Link","Smartplug","Power"]
},

{
"id": "/plugins/pushjet",
"url": "/plugins/pushjet/",
"date": "2017-09-09 00:00:00 -0500",
"title": "OctoPrint-Pushjet",
"description": "A plugin to send notifications with Pushjet when the job is done or is failed",
"author": "Jacopo Ferrigno",
"content": "Notification plugin for OctoPrint. It can be used to receive push notifications on your phone using Pushjet.This is practically an adaptation of the plugin from thijsbekke with minor modification and the possibility to sent the notification asynchronously.",
"tags": ["notification","Pushjet"]
},

{
"id": "/plugins/RepetierInformer",
"url": "/plugins/RepetierInformer/",
"date": "2017-09-18 00:00:00 -0500",
"title": "OctoPrint-RepetierInformer",
"description": "Send notices to the Repetier-Informer app.",
"author": "Dan Delaney",
"content": "Recieve push notifications using the paid for Repetier-Informer app for android or apple.More information can be obtained about the mobile application via the Repetier Apps webpage at https://www.repetier-apps.com.Repetier has granted use of my own Application ID.Use of the OctoPrint tenticle logo has been granted by Gina Häußge.",
"tags": ["repetier","repetier-informer","repetier-server","repetier-host","notification","push"]
},

{
"id": "/plugins/heatertimeout",
"url": "/plugins/heatertimeout/",
"date": "2017-09-25 00:00:00 -0500",
"title": "HeaterTimeout",
"description": "Automatically shut off heaters if no print has been started.",
"author": "Uriah Welcome",
"content": "Ever accidentally preheat your hotend or bed and then forget to start a print? Then this is the plugin for you.This plugin will automatically disable your printers heaters after a specified timeout if no print has been started.",
"tags": ["temperature"]
},

{
"id": "/plugins/GcodeEditor",
"url": "/plugins/GcodeEditor/",
"date": "2017-11-01 00:00:00 -0500",
"title": "GcodeEditor",
"description": "Edit gcode that's been uploaded to OctoPrint",
"author": "ieatacid",
"content": "Adds edit buttons to the items in the file list which let you edit the gcode of any file that’s not currently printing.",
"tags": ["gcode","editor","filemanagement"]
},

{
"id": "/plugins/themeify",
"url": "/plugins/themeify/",
"date": "2017-11-11 00:00:00 -0600",
"title": "Themeify",
"description": "Beautiful themes for octoprint",
"author": "Birk Johansson",
"content": "A small OctoPrint plugin to change the looks of OctoPrint!Features a beautiful Dark Theme inspired by Discord’s color palette, along with a handful of others thanks to the awesome contributors.Also features customization of individual elements. With the advanced-customization scheme you can modify the appearance to your heart’s desire directly from the settings-dialog!",
"tags": ["theme","dark","style","styling"]
},

{
"id": "/plugins/preheat",
"url": "/plugins/preheat/",
"date": "2017-11-21 00:00:00 -0600",
"title": "Preheat Button",
"description": "Automatically heat nozzle and bed to the printing temperature of the current gcode file",
"author": "Marian Kleineberg",
"content": "This plugin adds a preheat button to preheat the nozzle and bed to the printing temperature of the selected gcode file.This can be done manually but this plugin makes it more convenient.If the target temperature is not zero, the button will instead turn off nozzle heating (cooldown).",
"tags": ["ui","api","temperature"]
},

{
"id": "/plugins/tasmota",
"url": "/plugins/tasmota/",
"date": "2017-11-24 00:00:00 -0600",
"title": "OctoPrint-Tasmota",
"description": "Simple plugin to control sonoff devices that have been flashed with Tasmota.",
"author": "jneilliii",
"content": "TasmotaThis plugin is to control ITead Sonoff devices that have been flashed with Sonoff-Tasmota via web calls.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Tasmota device. Adjust additional settings as needed.  Device          The ip or hostname of sonoff device.        Index          Index number reprensenting the relay to control.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip and index.  For example if your plug is 192.168.1.2 and index of 1 your gcode command would be M80 192.168.1.2 1        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["sonoff","tasmota","smartplug","power"]
},

{
"id": "/plugins/astroprint",
"url": "/plugins/astroprint/",
"date": "2017-12-15 00:00:00 -0600",
"title": "AstroPrint Cloud",
"description": "Wirelessly manage and monitor your OctoPi powered printer from the AstroPrint Platform (AP Mobile Apps, AP Desktop Software, & AP Web Portal).",
"author": "AstroPrint",
"content": "Connect to the AstroPrint CloudOnce the AstroPrint plugin is installed on your OctoPi, and you have logged into your FREE AstroPrint Cloud account, you will be able to access, control, and monitor your 3D Printer from AstroPrint Mobile, AstroPrint Desktop, and the AstroPrint Web Portal.General benefits of connecting your OctoPi to the AstroPrint Cloud include:  Remotely start / stop prints, monitor prints, pre-heat, etc.  Access your printer(s) from anywhere.  No need to be limited to local networks.  Manage multiple printers easily.  Cloud slicing - This means you can print from any device, slicing happens in the cloud. (AstroPrint Desktop offers offline slicing as well.)  Sync your printing files across devices.  and more…Plugin SetupYou can follow the instructions in this READMEAstroPrint MobileUse the free AstroPrint Mobile app (iOS &amp; Android) to connect to your OctoPi.  You can connect from anywhere: local network, out-of-network wifi, or via your phone’s data network.  The Mobile app lets you monitor prints, start/stop prints, search and print from Thingiverse, check out your printing stats, save files in the cloud, slice files in the cloud, and more.AstroPrint.com Web PortalIn addition to using Mobile and Desktop, you’ll be able to access your OctoPi from any web enabled device by logging in at AstroPrint.com.  You can also access 3rd party applications here to do things like:  Cloud based file repair, print queuing, and more.Other ApplicationsVia AstroPrint APIs, some developers are adding the ability to print from their apps directly to 3D printers.  You’ll be able to print directly to your printer from websites like the NIH 3D Print Exchange, 3DaGoGo and TinkerCad.  You’ll also be able to print-from-app from apps like Toy Maker.Happy Printing!The AstroTeam",
"tags": ["cloud printing","remote monitoring","remote access","video streaming","design management","fleet management"]
},

{
"id": "/plugins/octoprint-eta",
"url": "/plugins/octoprint-eta/",
"date": "2017-12-19 00:00:00 -0600",
"title": "OctoPrint-Display-ETA",
"description": "Show finish time (ETA time) for current print.",
"author": "Pablo Ventura",
"content": "Display estimated time of finish for current print (Estimated Time of Arrival). Day of finish is displayed only when current print will not finish today.SetupYou must have the time zone configured on the host, otherwise you will see the time in UTC.In Debian the following commands are made “sudo dpkg-reconfigure tzdata”, then follow the wizard.",
"tags": ["time","eta","finish time"]
},

{
"id": "/plugins/TerminalCommands",
"url": "/plugins/TerminalCommands/",
"date": "2017-12-31 00:00:00 -0600",
"title": "OctoPrint-TerminalCommands",
"description": "Lets you add custom G-code command buttons to OctoPrint's Terminal view tab",
"author": "ieatacid",
"content": "Buttons are inserted between the terminal command input and the terminal filters. Currenty only supports G-code commands that you can send through the terminal.Multiple commands can be bound to one button by separating them with a semicolon (;) e.g. M114; M503 (spaces before or after the semicolon are fine)",
"tags": ["terminal","command","commands","gcode","ui"]
},

{
"id": "/plugins/firmwareupdater",
"url": "/plugins/firmwareupdater/",
"date": "2018-01-15 00:00:00 -0600",
"title": "Firmware Updater",
"description": "Flash pre-compiled firmware images from OctoPrint",
"author": "Gina Häußge and Ben Lye, based on work by Nicanor Romero Venier",
"content": "AboutAllows you to flash pre-compiled firmware images to boards with Atmel AVR family 8-bit MCUs (Atmega1280, Atmega1284p, and Atmega2560, e.g. RAMPS, Anet, etc.), and Atmel SAM family 32-bit MCUs (e.g. Arduino DUE).More boards can be added, please request additions via a Github issue.Full documentation is available on the plugin’s homepage.",
"tags": ["firmware","avrdude","firmware updater","flashing","arduino","due","bossac"]
},

{
"id": "/plugins/m73progress",
"url": "/plugins/m73progress/",
"date": "2018-01-16 00:00:00 -0600",
"title": "M73 Progress",
"description": "A plugin to update the built-in progress bar on your printer's LCD.",
"author": "Cesar Vandevelde",
"content": "Most 3D printers offer a progress bar or percentage indicator ontheir display. However, by default, this percentage is only updated whenprinting from SD card. When printing directly through OctoPrint, the progress barremains empty. This small plugin remedies the situation by injectingM73 (set build percentage) commands into the print stream.Note: Not all printers support this feature. In order for this to work, yourfirmware needs to understand the M73 command. See below for instructions forMarlin.Marlin FirmwareYou will need a recent version of Marlin, 1.1.7 or later. The M73 feature isnot enabled by default. You can enable it by uncommenting line 576 inConfiguration_adv.h:// Add an 'M73' G-code to set the current percentage#define LCD_SET_PROGRESS_MANUALLYConfigurationThe plugin should work as-is. Once enabled, the plugin will automatically injectM73 commands in the printer’s serial stream. There are two options to fine-tunethe plugin’s behavior, available through the M73 Progress tab in OctoPrintsettings.      Output time left: Sends the estimated time remaining using the R parameter.This is only supported by certain firmwares (e.g. Marlin 2.0 and Prusafirmware). This option is enabled by default; most firmwares will just ignorethis extra parameter if not supported.        Use time estimate: By default, the plugin uses OctoPrint’s built-in progressestimate, which is based on the progress inside a G-code file. In some cases,a better progress estimate can be calculated from the time elapsed and thetime remaining: P = elapsed / (elapsed + remaining). This option isparticularly useful forPrintTimeGenius users.  ",
"tags": ["progress","lcd","display"]
},

{
"id": "/plugins/webcamtab",
"url": "/plugins/webcamtab/",
"date": "2018-01-16 00:00:00 -0600",
"title": "WebcamTab",
"description": "Moves the webcam stream from the controls into its own tab",
"author": "Sven Lohrmann",
"content": "This OctoPrint plugin moves the webcam stream from the controls into its own tab. Keyboard control is still possible.",
"tags": ["webcam","ui"]
},

{
"id": "/plugins/floatingnavbar",
"url": "/plugins/floatingnavbar/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-FloatingNavbar",
"description": "Make the navbar float/stick to the top of the page.",
"author": "jneilliii",
"content": "FloatingNavbarThis plugin simply makes the navbar float/stick to the top of the page while scrolling.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MQTT","NavBar"]
},

{
"id": "/plugins/mqttpublish",
"url": "/plugins/mqttpublish/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-MQTTPublish",
"description": "Add buttons to navbar to publish messages to MQTT server.",
"author": "jneilliii",
"content": "MQTT PublishThis plugin simply adds buttons to the navbar of OctoPrint to send configured MQTT commands to the MQTT server configured in the MQTT Plugin.ScreenshotsPrerequisitesInstall the MQTT plugin via the Plugin Manager or manually using this url:https://github.com/OctoPrint/OctoPrint-MQTT/archive/master.zipSettingsOnce the MQTT plugin and this plugin are installed, configure the MQTT plugin for connecting to your MQTT server.  Then in this plugin’s settings configure the topics/commands you want to publish to that server.  Topic: topic to publish command to.  Command: comand to send to topic.  Icon: icon class name from fontawesome.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MQTT","NavBar"]
},

{
"id": "/plugins/tasmota_mqtt",
"url": "/plugins/tasmota_mqtt/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-TasmotaMQTT",
"description": "Plugin to control Tasmota devices via MQTT protocol.",
"author": "jneilliii",
"content": "Tasmota-MQTTThis plugin allows the control of Tasmota devices from within OctoPrint via MQTT commands.ScreenshotsPrerequisitesInstall the MQTT plugin via the Plugin Manager or manually using this url:https://github.com/OctoPrint/OctoPrint-MQTT/archive/master.zipSettings  Set the Full Topic settings to match your tasmota settings.  Use the Tasmota device’s topic in the Tasmota-MQTT Plugin settings for the individual relays.  For multiple relay devices enter the index number that matches your desired relay.  For single relay devices like the iTead Sonoff S20 Smart Socket, leave Relay # blank.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["tasmota","mqtt","power"]
},

{
"id": "/plugins/M117SpeechSynthesis",
"url": "/plugins/M117SpeechSynthesis/",
"date": "2018-01-18 00:00:00 -0600",
"title": "OctoPrint-M117SpeechSynthesis",
"description": "Plugin to speak aloud M117 gcode messages via the web ui.",
"author": "jneilliii",
"content": "M117 Speech SynthesisThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client.Note: this plugin does NOT work with files on the SD card. Requires modern day browsers that support Speech Synthesis, check compatibility table here.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode","speech","voice","accessibility"]
},

{
"id": "/plugins/taborder",
"url": "/plugins/taborder/",
"date": "2018-01-22 00:00:00 -0600",
"title": "OctoPrint-TabOrder",
"description": "Simple plugin to allow the ordering of tabs within OctoPrint.",
"author": "jneilliii",
"content": "Tab OrderThis plugin allows for controlling the order of tabs within the OctoPrint web interface. After changes are made you must do a force reload by holding down ctrl key while pressing the refresh button in your browser.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["ui","tab","sort"]
},

{
"id": "/plugins/atxpihat",
"url": "/plugins/atxpihat/",
"date": "2018-01-25 00:00:00 -0600",
"title": "ATXPiHat",
"description": "Software support for the ATXPiHat",
"author": "Brian Anichowski",
"content": "Software support for the ATXPiHat expansion board.Read all about this board and it’s usage at baprojectworkshop.com. The installation instructions are located on my Github site. These need to be reviewed prior to installation of the plugin  Fully compatible with Octoprint 1.3.6 or greater.  Directly power the Raspberry Pi 3B, no more external power source.  ATX 24 Molex connector, no more cutting up the supply cables  Amperage support to handle 19 amps at 12v for heat bed and hot end  Screw connectors make easy connection to the main board, External Mosfet, etc  Direct 12v RGB LED support, can also be controlled by GCODE  Emergency power off (EPO)  Power On/Off monitoring  Visual indicator of the 12v supply being active and powering the external devices  12v monitored (RPM) cooling fan port  Upon fan failure it can be configured to automatically shuts the printer down  Auxiliary 5v support for external powered items  Monitoring of the 12v rail, for amperage and voltage  Automatic shutdown when an amperage threshold is reached. Meltdown protection  Switchable 12 or 5 v connector for controlling external items via GCODE",
"tags": ["psu","led","emergency","atx","fan","monitor","epo","control"]
},

{
"id": "/plugins/ESPurna_RGB",
"url": "/plugins/ESPurna_RGB/",
"date": "2018-01-30 00:00:00 -0600",
"title": "ESPurna RGB",
"description": "Control ESPurna RGB LED device wirelessly",
"author": "Imon Daneshmand",
"content": "OctoPrint plugin for controlling ESPurna RGB LED device via REST API over the network using M150 GCODE    M150: Set Status LED Color - Use R-U-B for R-G-B    M150 R255       ; Turn LED red    M150 R255 U127  ; Turn LED orange    M150            ; Turn LED off    M150 R U B      ; Turn LED white",
"tags": ["rgb","rgbw","rgbww","led","controller","espurna","wifi","wireless","network"]
},

{
"id": "/plugins/malyan_connection_fix",
"url": "/plugins/malyan_connection_fix/",
"date": "2018-02-07 00:00:00 -0600",
"title": "Malyan/Monoprice Connection Fix",
"description": "Fixes connection issues with Malyan/Monoprice printers",
"author": "Gina Häußge",
"content": "Due to some weird issue with some Malyan/Monoprice printers, the initial connection to the printer via the Connect button may fail. Only the second connection succeeds.This plugin is supposed to fix this by invoking a specific serial port opening sequence that has been foundto solve this problem. Note that due to the nature of this sequence this fix can’t work for OctoPrint installationson Windows and is therefore not supported for that OS.Printer models known to be affected by this and confirmed as issues resolved with this fix:  Turnigy Fabrikator II Mini (Malyan M100)  Monoprice Select Mini (Malyan M200)  Monoprice Mini Delta (Malyan ?)For more details please refer to this ticket on the OctoPrint issue tracker.",
"tags": ["monoprice","monoprice select mini","monoprice mini delta","malyan","malyan m100","malyan m200","turnigy","turnigy fabrikator 2","turnigy fabrikator ii","connection","fix"]
},

{
"id": "/plugins/CR10_Leveling",
"url": "/plugins/CR10_Leveling/",
"date": "2018-02-26 00:00:00 -0600",
"title": "CR-10 Leveling",
"description": "Adds CR-10 leveling buttons to the controls tab",
"author": "electr0sheep",
"content": "This plugin adds buttons to apply heat to the bed and nozzle, and move theprinting head to each of the four corners of the bed, as well as the center ofthe bed.The coordinates and temperatures can all be customized in the plugin’s settings.",
"tags": ["cr10","leveling"]
},

{
"id": "/plugins/octorant",
"url": "/plugins/octorant/",
"date": "2018-03-11 00:00:00 -0600",
"title": "OctoPrint-Octorant",
"description": "Discord plugin for OctoPrint",
"author": "Benjamin Chanudet",
"content": "OctoPrint-OctoRant 1.0.0OctoRant is a plugin allowing Octoprint to send notifications to a Discord channel via a webhook URL. When wanted it can directly send a snapshot to Discord (without needing third-party services)License : MITSetupInstall the pluginInstall via the bundled Plugin Manageror manually using this URL:https://github.com/bchanudet/OctoPrint-Octorant/archive/master.zipCreate the WebHook in DiscordNote : you need to have the permission “Manage WebHooks” to create or edit a WebHook in Discord.Once you got the WebHook URL, head over to the plugin configuration to finish the setup.ConfigurationThe plugin can be configured in the configuration panel, under the “Octorant” panel.Discord Settings  WebHook URL : please follow the Setup procedure to retrieve the URL of the WebHook.  Bot name : You can override the name you put on the WebHook description in Discord by a name. Useful if the webhook is not specific to Octorant and also used for other things.  Bot Avatar URL : You can also override the avatar us put in Discord for the WebHook. The URL needs to be globally accessible (it will be retrieved by Discord’s servers).In order for you to be sure these settings work, every time you change one of them, a test message will be sent to the corresponding Discord Channel. If you don’t receive it, something is most likely wrong!Message SettingsHere you can customize every message handled by Octorant.  Toggle the message : by unchecking the checkbox in front of the message title, you can disable the message. It won’t be sent to Discord.  Message : you can change the default content here. See the section Message format for more information.  Include snapshot : if you have a snapshot URL defined in the Octoprint settings, you can choose to upload a snapshot with the message to Discord.  Notify every XX% : specific to the printing progress message, this settings allows you to change the frequency of the notification :          10% means you’ll receive a message at 10%, 20%, 30%, 40% … 80%, 90% of the printing process.      5% means you’ll receive a message at 5%, 10%, 15%, 20% … 80%, 85%, 90%, 95% of the printing process.      etc…      Message formatMessages are regular Discord messages, which means you can use :  **markdown** format (see Discord Documentation)  :emoji: shortcuts to display emojis  @mentions to notify someoneSome events also support variables, here is a basic list :Printing process : started event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage locationPrinting process : failed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage locationPrinting process : done event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {time}: time needed for the print (in seconds)  {time_formatted} : same as {time}, but in a human-readable format (HH:MM:SS)Printing process : failed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting process : paused event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting process : resumed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting progress event :  {progress} : progress in % of the print.Printer state : error  {error} : The error receivedFor more reference, you can go to the Octoprint documentation on EventsIssues and HelpIf you encounter any trouble don’t hesitate to open an issue. I’ll gladly do my best to help you setup this plugin.This is my first project ever in Python, so if you happen to be more experimented and you noticed some bad things, feel free to tell me!",
"tags": ["discord","notifications","snapshots"]
},

{
"id": "/plugins/octolapse",
"url": "/plugins/octolapse/",
"date": "2018-03-24 00:00:00 -0500",
"title": "Octolapse",
"description": "Create a stabilized timelapse of your 3D prints.  Highly customizable, loads of presets, lots of fun.  Requires OctoPrint 1.3.9 or higher.",
"author": "Brad Hochgesang",
"content": "Octolapse                The Octolapse Tab        Octolapse is provided without warranties of any kind.  By installing Octolapse you agree to accept all liability for any damage caused directly or indirectly by Octolapse.  Use caution and never leave your printer unattended.Octolapse is designed to make stabilized timelapses of your prints with as little hassle as possible, and it’s extremely configurable.  Now you can create a silky smooth timelapse without a custom camera mount, no GCode customizations required.Octolapse moves the print bed and extruder into position before taking each snapshot, giving you a crisp image in every frame.  Snapshots can be taken at each layer change, at specific height increments, after a period of time has elapsed, or when certain GCodes are detected.Please support my work by becoming a patron.Important:  Octolapse requires OctoPrint v1.3.9 or higher and some features require OctoPrint v1.3.10rc1 or above.  You can check your OctoPrint version by looking in the lower left hand corner of your OctoPrint server home page.Recent ChangesIf you are upgrading from v0.3.1, please read the v0.3.4 release notes, a lot has changed.  If you’ve had trouble running Octolapse in the past, you just might want to try it again!What Octolapse Does                \t                            A timelapse of a double spiral vase made with Octolapse                Octolapse was designed with print quality in mind  Continuous tracking of the X,Y, and Z axes.  Octolapse knows where your extruder and bed will be at all times.  Extruder state detection enables Octolapse to choose a good time take a snapshot, minimizing defects.  Choose from dozens of existing presets, or use a custom configuration to maximize quality for your specific application.  Customizable Z-Hop and retract detection to reduce stringing, maximizing quality.  Configurable stabilizations allow you complete control of the X and Y position of each snapshot.  You can choose a position as close to or as far away from your part as you wish.  Minimal impact on print time and print quality.  Octolapse normally takes between one and three seconds to take a snapshot.  It even reports exactly how much time it’s using after each snapshot!  Use High Quality Mode to prevent snapshots over exterior perimeters using the new fully customizable Feature Detection.  Allow or prevent snapshots in certain areas with snapshot position restrictions.  This can be used to prevent snapshots over critical areas of your print or a delicate part.  If you have a multi-material printer, you can even restrict snapshots movements to your wipe tower, virtually eliminating any quality considerations!  Octolapse can calculate intersections between the printer path and any snapshot position restriction, allowing a snapshot even in the middle of an extrusion.  Stop the timelapse whenever you want!  If things go awry, you can prevent Octolapse from taking any further snapshots for the rest of the print.  It will wait to render any snapshots that were already taken until after the print has finished.  Use test mode to try out your timelapse settings without heating your bed or nozzle, turning on any fans, or extruding any filament.  This saves time and plastic.  It’s also very useful for development and testing.    Octolapse was also designed to make great timelapses    Synchronize your timelapses with OctoPrint’s built in plugin, keeping all of your videos in one place.  Choose between fixed frame rate or fixed length rendering.  Octolapse will automatically adjust the frame rate to match any desired length.  You can even set a minimum or maximum acceptable frame rate.  Add pre or post roll frames (not videos yet, sorry) to your snapshot preventing an abrupt start or finish.  Choose from several output formats including MP4 (libxvid and H.264), AVI, FLV, VOB, GIF, and MPEG.  More coming soon, suggestions welcome.  Note: *OctoPrint 1.3.10 is required to synchronize some formats with the built-in timelapse plugin.*  Control the bitrate of your video.  Add a Custom Watermark to your video.  Add Text Overlays to your video using replacement tokens.  Control the position, color, font and more!  Control the number of rendering threads to reduce rendering time.    To make good timelapses, you need good snapshots    Slow camera or low frame rate?  Octolapse allows you to set a snapshot delay before taking a snapshot to allow your camera enough time to get a clear image.  Control your camera settings when using mjpg-streamer including: contrast, brightness, focus, white balance, pan, tilt, zoom, and much more.  You can apply your custom settings before each print.  Rotate, flip, and transpose your snapshots  Use custom camera scripts to trigger a DSLR, post-process images, configure your camera, turn lighting on and off, control GPIO, or practically anything you can think of!  Five script types are available.  Use Multiple cameras to create multiple timelapses.  Send gcode to your printer when it’s time to take a snapshot via the new Gcode Camera Type.  Supports for the M240 gcode!    Simplified Setup and Better Compatibility    Select your slicer type to simplify printer setup by making the setting names and units match your slicer!  Cura, Simplify 3d and Slic3r PE are fully supported.  Enhanced and simplified error reporting and informational panels.  All settings include links to the Octolapse Wiki, so you can get to the documentation quickly if you have questions.  Octolapse now works with Themeify.InstallationRead the installation instructions.After installation, checkout the project’s wiki pages.  It never hurts to know more about what you’re doing!UsageLearn how to start your first print here.  It’s a good idea to read about the settings before using Octolapse.  I also recommend you watch this brief tutorial, which explains how to configure your printer profile for use with the new High Quality snapshot profile.Known Printer SupportOctolapse is still in Beta but has been confirmed to work on several printers:  Genuine Prusa - Mk2, Mk2S, Mk2 w Multi Material, Mk3  Anet A8 - Beta - User Submitted  Anycube I3 Mega - Beta - User Submitted  CR-10 - Beta - User Submitted  Dagoma Neva - Beta - User Submitted  Irapid Black - Beta - User Submitted  Monoprice Maker Select v2/Wanhao Duplicator i3 - Beta - User Submitted - Requires OctoPrint 1.3.7rc3 or abovePlease note that some settings may need to be adjusted depending on your slicer settings.More Octolapses            \t                            A user generated compilation created by WildRose Builds.  Support this channel and please subscribe!                            \t                            The Milennium Falcon                            \t                            The Moon - Animated X Axis                            \t                            The obligatory benchy                History of OctolapseI got the idea for Octolapse when I attempted to manually make a stabilized timelapse by hand editing my GCode files.  To accomplish this I used the excellent and simple GCode System Commands plugin.  The timelapse worked great, but it required a lot of effort which I didn’t want to put in every time.  I received several requests for instructions on how to create a stabilized timelapse, so I decided to give plugin development a go.  I’ve never done one before (or programmed python or knockout or anything open source), but figured I could contribute something good to the community.  This is my “thank you” to all of the makers out there who have contributed your time and effort!Report ProblemsIf you think you have found a bug in Octolapse, please create an issue on the official github.com page here.  In order to have your issue handled properly and quickly, please completelyLicenseView the Octolapse license.Copyright (C) 2017  Brad Hochgesang - FormerLurker@pm.me",
"tags": ["timelapse"]
},

{
"id": "/plugins/DisplayLayerProgress",
"url": "/plugins/DisplayLayerProgress/",
"date": "2018-04-09 00:00:00 -0500",
"title": "DisplayLayerProgress",
"description": "Displays the Layer, Progress and other data on \"Printer-Display\", \"NavBar\", \"BrowserTab-Title\" and in the Browser as a simulated \"Printer-Display\"",
"author": "Olli",
"content": "A OctoPrint-Plugin that sends the current Layer-Informations, the Progress and other data of a print via M117 command to the printer-display and also to the top navigation bar.A new feature is the “Desktop Printer-Display”, which shows all M117 messages in a Desktop PopUp.It shows the progress, estimatedEndTime, printTimeLeft, currentLayer, totalLayerCount, last/average layerDuration, currentHeight, totalHeight, feedrate and fanspeed:  Printer Display: 50% L=60/120 H=23mm/47mm  NavBar: Layer: 60 / 120 Height: 23mm of 47mm  Browser TabTitle: 12% end: 19:32Output pattern is adjustable. Please visit the homepage for more informations!Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)ATTENTION:  The layer information works only when the slicer adds “layer-indicator” to the g-code (CURA-Example as comments like ;LAYER:10). Then these indicators are parsed via a regular-expression.  Currently supported slicers: CURA, Simplify3D, KISSlicer. You can add your own layer-expressions in Plugin-Settings.If you want to use “slic3r”, see Enhancement #8  Sometimes there is a “Post Processing script” that deletes all comments (e.g. see Issue #33)  You need to upload your G-Code after installation of the plugin again (if you want to reuse already stored models in OctoPrint), because while uploading the G-Code is modfied  The total height “calculation” can be done in two ways: 1)the max Z-Value in the G-Code, 2) max Z-Value with extrusion in this height  The height/layer information is sometimes not matching with G-Code Viewer, because the viewer did a lot of “magic” (e.g. add extrusion diameter to height)For implementation details please visit the homepage.",
"tags": ["display","lcd","printer","progress","layer"]
},

{
"id": "/plugins/bedlevelvisualizer",
"url": "/plugins/bedlevelvisualizer/",
"date": "2018-04-14 00:00:00 -0500",
"title": "Bed Level Visualizer",
"description": "Displays 3D mesh of bed topography report.",
"author": "jneilliii",
"content": "Bed VisualizerThis plugin utilizes Plotly js library to render a 3D surface of the bed’s reported mesh on a tab within OctoPrint. It converts thisSend: G29 TRecv: echo:Home XYZ firstRecv: Recv: Bed Topography Report:Recv: Recv: (0,9)                                                                   (9,9)Recv: (30,270)                                                                (270,270)Recv:  -0.452   -0.319   -0.237    0.287    0.140    0.139    0.136    0.317    0.247    0.247Recv: Recv:  -0.195   -0.273   -0.180   -0.178    0.014    0.018    0.111    0.214    0.210    0.210Recv: Recv:  -0.270   -0.252   -0.151   -0.119    0.009    0.016    0.072    0.249    0.224    0.224Recv: Recv:  -0.307   -0.205   -0.163   -0.124   -0.094   -0.002    0.036    0.151    0.174    0.196Recv: Recv:  -0.186   -0.130   -0.152   -0.105   -0.144   -0.007    0.044    0.093    0.181    0.270Recv: Recv:  -0.010   -0.077   -0.073    0.155   -0.006   -0.133    0.110    0.046    0.109    0.173Recv: Recv:   0.059   -0.094   -0.072   -0.002   -0.006    0.037    0.050    0.065    0.124    0.184Recv: Recv:  -0.057   -0.028    0.039    0.028    0.024    0.005    0.102    0.165    0.176    0.187Recv: Recv:   0.067    0.015    0.096    0.117    0.001    0.079    0.138    0.346    0.185    0.185Recv: Recv: [ 0.071]   0.014    0.061   -0.127    0.167    0.040    0.098    0.195    0.194    0.194Recv: (30,30)                                                                    (270,30)Recv: (0,0)                                                                     (9,0)Recv: ok P15 B3into thisSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["bed level","mesh","tab","graph"]
},

{
"id": "/plugins/DeleteAfterPrint",
"url": "/plugins/DeleteAfterPrint/",
"date": "2018-04-20 00:00:00 -0500",
"title": "DeleteMoveAfterPrint",
"description": "Deletes/Move automaticaly the Print-Model",
"author": "Olli",
"content": "Delete/Move automatically the Print-Model:  after successful print. If the print fails, the deletion is not executed!  after predefined daysSupport my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)DetailsThe user can enable automatic deletion/movement after each print by using a checkbox in the sidebar.If you want to delete/move files after a couple of days, use the Plugin-Settings. Deletion/Movement is done while opening OctoPrint.For implementation details, please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/opitemp",
"url": "/plugins/opitemp/",
"date": "2018-04-23 00:00:00 -0500",
"title": "OpiTemp",
"description": "Orange Pi temperature in the navbar.",
"author": "hashashin",
"content": "Simple plugin to show Orange Pi (running armbian) SOC temperature in the navbar.Some code inspired by stolen from @ntoff OctoPrint-NavbarTemp fork.",
"tags": ["ui"]
},

{
"id": "/plugins/ipOnConnect",
"url": "/plugins/ipOnConnect/",
"date": "2018-05-04 00:00:00 -0500",
"title": "OctoPrint-ipOnConnect",
"description": "Simple plugin to display the ip address of connected OctoPrint instance on the control panel using M117 command.",
"author": "jneilliii",
"content": "ipOnConnectSimple plugin to display the ip address of connected OctoPrint instance on the control panel using M117 command. Feathured by Prusa Research and bundled with their OctoPrint image.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["ip"]
},

{
"id": "/plugins/multicam",
"url": "/plugins/multicam/",
"date": "2018-05-09 00:00:00 -0500",
"title": "MultiCam",
"description": "Extends the Control tab of OctoPrint, allowing the ability to switch between multiple webcam feeds.",
"author": "Michael Morris",
"content": "It is recommended to setup a second RPi (potentially with MotionEyeOS) to setup webcams from. Attaching more than one webcam to your octoprint device could result in high proccess use causing issues with your prints. You may also have to invest in a usb hub to power your webcams as RPi’s tend to have low votage issues when they are plugged in directly to the Rpi. This Link has a good list of USB hubs that are support by Raspberry.Future updates will include the more options to show different types of streams, as well as the abilitly to show more than one stream at a time.",
"tags": ["webcam","display","ui","control"]
},

{
"id": "/plugins/dropbox_timelapse",
"url": "/plugins/dropbox_timelapse/",
"date": "2018-05-10 00:00:00 -0500",
"title": "OctoPrint-Dropbox-Timelapse",
"description": "Automatically upload rendered timelapses to Dropbox. Can also delete after upload to save space on the Raspberry Pi SD Card.",
"author": "Justin Slay, Sam Kemp, Brad Hochgesang",
"content": "ConfigurationYou must provide an API Token to be able to upload rendered timelapses to Dropbox.To do this, create a Dropbox Appselect Dropbox API -&gt; App Folder -&gt; Provide Folder Name.Once the app is created, scroll down to the OAuth 2 section, and click Generate Token. Paste the token into thesettings pane.",
"tags": ["timelapse","dropbox"]
},

{
"id": "/plugins/DiscordRemote",
"url": "/plugins/DiscordRemote/",
"date": "2018-06-04 00:00:00 -0500",
"title": "OctoPrint-DiscordRemote",
"description": "Discord bot for OctoPrint",
"author": "Cameron Cross, originally by Benjamin Chanudet",
"content": "DiscordRemoteDiscordRemote is a plugin that allows OctoPrint to be interacted with using a Discord bot.The bot is able to post messages to a discord channel based on events, and can include screenshots.The bot also listens on the channel, for certain commands, will execute actions on the machine.A list of supported commands is available by sending a “/help” message.It is currently capable of:  Starting a print.  Aborting a print.  Listing the files.  Taking a snapshot with the configured webcam.  Connecting and Disconnecting to the printer.Important: There are no permissions or controls as to who can send commands to the bot. This MUST be done by the owner of the Discord channel.",
"tags": ["discord","notifications","snapshots","remote","control"]
},

{
"id": "/plugins/auth_bookedscheduler",
"url": "/plugins/auth_bookedscheduler/",
"date": "2018-06-05 00:00:00 -0500",
"title": "Auth Booked Scheduler",
"description": "Authentication via Booked Scheduler",
"author": "Luca Zimmermann",
"content": "Authentication via a Booked Scheduler Instance.",
"tags": ["Authentication"]
},

{
"id": "/plugins/sidebartempgraph",
"url": "/plugins/sidebartempgraph/",
"date": "2018-06-05 00:00:00 -0500",
"title": "OctoPrint-SideBarTempGraph",
"description": "Plugin to display temperature graph in the side bar.",
"author": "jneilliii",
"content": "Sidebar Temp GraphSmall plugin that adds a temperature graph to the side bar.Note: To change the location of the graph within the side bar install OctoPrint-SidebarOrder plugin, use plugin_sidebartempgraph for the sidebar identifier.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["sidebar","side bar","temperature","graph"]
},

{
"id": "/plugins/cancelobject",
"url": "/plugins/cancelobject/",
"date": "2018-06-08 00:00:00 -0500",
"title": "OctoPrint-Cancelobject",
"description": "Cancel single objects during a print based on gcode comment lines",
"author": "Paul Paukstelis",
"content": "This plugin allows the user cancel single objects during a print whileallowing the remaining objects to print normally. Instructions for use with compatible slicersis provided on the plugin’s GitHub Homepage.",
"tags": ["server","control","navbar","ui"]
},

{
"id": "/plugins/shutdownprinter",
"url": "/plugins/shutdownprinter/",
"date": "2018-06-18 00:00:00 -0500",
"title": "ShutdownPrinter",
"description": "Plugin for shutdown printer after finishing a print job",
"author": "devildant",
"content": "This OctoPrint plugin enables the system to be automatically shut down printer after a print is finished (works with tplink plugs and OctoPrint-TPLinkSmartplug plugins).The user can enable shutdown print for each print by using a checkbox in the sidebar.This plugin was inspired by the work of “Nicanor Romero Venier” on the plugin: AutomaticShutdown (https://plugins.octoprint.org/plugins/automaticshutdown/)Once the print is finished, a popup will appear with a countdown which lets the user abort the shutdown.",
"tags": ["shutdown","shutdown printer","tplink"]
},

{
"id": "/plugins/excluderegion",
"url": "/plugins/excluderegion/",
"date": "2018-07-05 00:00:00 -0500",
"title": "Exclude Region",
"description": "Adds the ability to prevent printing within rectangular or circular regions of the currently active gcode file",
"author": "Brad Fisher",
"content": "Imagine running a long running, multi-part print job only to have one of the parts fail half-waythrough.  If you allow the job to continue, that big mess of spaghetti-like extrusions within thefailed area are likely to get stuck to other pieces and lead to additional failures or blemisheson the other parts (not to mention wasted filament) as the print goes on.The intent of this plugin is to provide a means to salvage multi-part prints where one (or more)of the parts has broken loose from the build plate or has otherwise become a worthless piece offailure.  Instead of cancelling an entire job when only a portion is messed up, use this pluginto instruct OctoPrint to ignore any gcode commands executed within the area around the failure.You can dynamically define rectangular or circular exclusion regions for the currently selectedgcode file through OctoPrint’s integrated gcode viewer, and those regions may be added or modifiedbefore, during, or even after printing.Some things to note about this plugin  It can only affect printing of files managed by OctoPrint, and can NOT exclude regions of filesbeing printed from your printer’s SD card.  Use the exclude feature at your own risk.  It is recommended to only use it when a portion ofyour print has already failed.  When defining regions, try to fully enclose all portions of the failed part that would otherwisestill print.  You will get unpredictable results if you only exclude a portion of a part, and anyoverhangs on higher layers that extend outside an excluded region will have nothing to supportthem.  This plugin makes several assumptions when filtering the gcode, some of which may not be correctfor your printer’s firmware.  It was developed with Marlin in mind, so should work reasonably wellwith firmware that replicates Marlin’s behavior.  The plugin only supports a single hotend at this time.  It is not recommended to attempt to useit on a gcode file with instructions for multiple hotends.  Users of TouchUI will not be able to create or modify exclude regions.  Any defined regions willbe displayed, but they cannot currently be manipulated on a touch device.Get HelpIf you experience issues with this plugin please use the issue tracker at the plugin’s Homepagelinked on the right.",
"tags": ["gcode","exclude","region","ui"]
},

{
"id": "/plugins/gcodestatEstimator",
"url": "/plugins/gcodestatEstimator/",
"date": "2018-07-05 00:00:00 -0500",
"title": "GcodeStat Estimator",
"description": "uses data put in to g-code by gcodestat to estimate time to finish print",
"author": "Bogdan Kecman",
"content": "This plugin will read the M117 data put into G-Code by gcodestat ( https://github.com/arhi/gcodestat ) in formatM117 ###% Remaining ( HH:MM:SS )and use this data for displaying proper progress reportrequires OctoPrint 1.3.9",
"tags": ["helper","estimator","estimation","time","print time"]
},

{
"id": "/plugins/domoticz",
"url": "/plugins/domoticz/",
"date": "2018-07-07 00:00:00 -0500",
"title": "OctoPrint-Domoticz",
"description": "Simple plugin to control light switches via Domoticz server.",
"author": "jneilliii",
"content": "This plugin is to control switches through Domoticz via web calls.ConfigurationOnce installed go into settings and enter the connection details for your Domoticz server and switch index. Adjust additional settings as needed.Settings Explained  IP:PORT          The ip and port of Domoticz server.        Index          Index number reprensenting the switch to control.        Icon          Icon class name from the fontawesome library.        Label          Title attribute on icon that shows on mouseover.        Username          Username used to connect to web interface. If authentication is not configured on your Domoticz server leave this blank.        Password          Password used to connect to web interface. If authentication is not configured on your Domoticz server leave this blank.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off switch.  Syntax for gcode command is M80/M81 followed by IP:PORT and index.  For example if your Domoticz server is 192.168.1.2:8080 and switch index is 1 your gcode command would be M80 192.168.1.2:8080 1        postConnect          Automatically connect to printer after switch is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the switch.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the switch.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["domoticz","smartplug","power","switch"]
},

{
"id": "/plugins/PrintTimeGenius",
"url": "/plugins/PrintTimeGenius/",
"date": "2018-07-12 00:00:00 -0500",
"title": "OctoPrint-PrintTimeGenius",
"description": "Use a gcode pre-analysis to provide better print time estimation",
"author": "Eyal",
"content": "Generate highly accurate gcode printing time estimations using advanced gcode analyzers combined with the printing history.PrintTimeGenius provides estimates that are accurate to within just minutes, sometimes even seconds!  It can even account for the time to heat up the nozzle/bed.  It uses an algorithm to calculate the print time remaining while running so that even if the original estimate was wrong, it will still converge on the correct one.PrintTimeGenius uses the estimates embedded in your gcode, put there by slic3r or cura.  It also runs a Marlin or Smoothieware simulation to provide line-by-line accuracy, often accurate within 0.2% of actual print time.",
"tags": ["helper","estimator","estimation","time","print time","analysis"]
},

{
"id": "/plugins/layerdisplay",
"url": "/plugins/layerdisplay/",
"date": "2018-07-15 00:00:00 -0500",
"title": "LayerDisplay",
"description": "Displays the current layer and total layers for a print job.",
"author": "Matt Thompson",
"content": "LayerDisplayLayerDisplay displays what layer a print job is on and how many layers are in that job.  Does not require special GCode comments. LayerDisplay analyzes the GCode before the a print starts to figure out where layer changes happen.  LayerDisplay does not work when printing from the SD card.Get HelpVisit the issues section of GitHub if you experience an issue or have a question or suggestion.",
"tags": ["layer","display","progress"]
},

{
"id": "/plugins/bedlevelingwizard",
"url": "/plugins/bedlevelingwizard/",
"date": "2018-07-16 00:00:00 -0500",
"title": "OctoPrint-BedLevelingWizard",
"description": "Plugin to aid in the process of manually leveling your bed.",
"author": "jneilliii",
"content": "Bed Leveling WizardThis plugin mimcs the Simplify3D Bed Leveling Wizard process. Configure default settings in OctoPrint settings.  When ready to level your bed press Start on the plugin’s sidebar panel and adjust that point’s screw.  Press Next and then adjust that point’s screw, and repeat until finished.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["manual bed leveling","bed leveling"]
},

{
"id": "/plugins/statefulsidebar",
"url": "/plugins/statefulsidebar/",
"date": "2018-07-16 00:00:00 -0500",
"title": "Stateful Sidebar",
"description": "Plugin that monitors and stores the state of sidebar collapsed panels and restores that state upon next visit to OctoPrint.",
"author": "jneilliii",
"content": "Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Note:  Does not work with the Connection panel, as it’s state is overridden by OctoPrint.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Sidebar","Collapsed","Stateful"]
},

{
"id": "/plugins/MultipleUpload",
"url": "/plugins/MultipleUpload/",
"date": "2018-07-17 00:00:00 -0500",
"title": "OctoPrint-MultipleUpload",
"description": "Allow uploading multiple files at once",
"author": "Eyal",
"content": "This plugin allows you to upload multiple files at once.  You can select multiple files like you normally do on your computer: click and drag, shift-click, etc.The progress bar might look weird during the uploading.  It’s just a cosmetic issue; you can ignore it.",
"tags": ["multiple","upload","file upload"]
},

{
"id": "/plugins/rtmpstreamer",
"url": "/plugins/rtmpstreamer/",
"date": "2018-08-13 00:00:00 -0500",
"title": "OctoPrint-RTMPStreamer",
"description": "Plugin that reencodes the mjpg stream provided by octopi/mjpgstreamer/yawcam and posts to any RTMP stream server (ie Twitch) and adds a tab that will allow for wathing configured stream assuming there is a webpage url that allows that type of connection.",
"author": "jneilliii",
"content": "RTMP StreamerPlugin that adds a tab to OctoPrint for viewing, starting, and stopping a re-encoded stream to any RTMP server. Only tested with Twitch.Notes:  Plugin requires that OctoPrint’s webcam stream uses a full url path including the ip address, ie http://192.168.1.2/webcam/?action=stream  Only tested streaming to Twitch from a Pi3.  Plugin does not provide a streaming application, it just re-encodes the mjpg stream (included with ocotpi) to a flv stream and transmits to configured RTMP server url.  Although resolution is configurable in the plugin, the mjpg input stream being re-encoded may have a lower resolution and therefore not really be as high as you set it in the plugin settings.ScreenshotsPrerequisitesIn order to stream please follow the instructions here.  If you are just wanting to watch a stream enter the view url in settings, no other prerequisites are required.SettingsOnce the prerequisites are met and the test command is successfull enter the resolution, stream url, and view url in the RTMP Streamer settings.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Twitch","Live Stream","RTMP"]
},

{
"id": "/plugins/klipper",
"url": "/plugins/klipper/",
"date": "2018-08-21 00:00:00 -0500",
"title": "OctoKlipper",
"description": "A plugin for a better integration of Klipper into OctoPrint.",
"author": "Martin Mühlhäuser",
"content": "OctoKlipper assists in configuring, controlling and monitoring the Klipper 3D-printer firmware.It provides the following functions:  Simplified connection dialog.  Buttons for restarting Klippers host and MCU processes.  User definable macro buttons that let you execute custom GCODE and Klipper commands.  An assisted bed leveling wizard with user definable probe points to simplify manual bed leveling.  A dialog for Klippers PID Tuning.  A dialog to set a coordinate offset for future GCODE move commands.  A log displaying only Klipper messages.  A basic configuration editor to configure Klipper directly through your browser.  A performance graph displaying key parameters extracted from the Klipper logs, helpful when debugging performance issues.Get HelpIf you experience issues with this plugin please use the issue tracker at the plugins github linked on the right.",
"tags": ["klipper","firmware","control","monitor"]
},

{
"id": "/plugins/filament_sensor_ng",
"url": "/plugins/filament_sensor_ng/",
"date": "2018-09-17 00:00:00 -0500",
"title": "Filament Sensor NG",
"description": "A filament monitor that pauses the print when your filament runs out and lets you restart it.",
"author": "Red_M",
"content": "Pause printing when the 3D printer runs out of filament.Designed as an upgrade of the Filament Sensor Reloaded plugin by kontakt.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/ProgressBasedOnTime",
"url": "/plugins/ProgressBasedOnTime/",
"date": "2018-09-18 00:00:00 -0500",
"title": "OctoPrint-ProgressBasedOnTime",
"description": "Replace file based progression by time based progression",
"author": "Celogeek",
"content": "This plugin will change the way octoprint send back progress information to the plugins and apps.Octoprint send progress information based on file progression.This plugin will send progress information based on the time left to print.It will apply change for all plugin and apps that display progression information. It keep sending file progress to the estimators.I suggest to associate those plugins:  Print Time Genius (https://plugins.octoprint.org/plugins/PrintTimeGenius/)  DetailedProgress (https://plugins.octoprint.org/plugins/detailedprogress/).",
"tags": ["progress","analysis","estimation","estimator","print time","time"]
},

{
"id": "/plugins/m73etaoverride",
"url": "/plugins/m73etaoverride/",
"date": "2018-09-18 00:00:00 -0500",
"title": "M73 ETA Override",
"description": "Plugin that overrides OctoPrint ETA to values from last M73 gcode sent to the printer",
"author": "Jakub Furman",
"content": "AboutThe last Sli3cr Prusa Edition implemented M73 gcode injecting to the generated gcodes. This M73 estimations works a much better for Prusa printers than normal OctoPrint ETA estimator. M73 are displayed on Prusa LCD already directly after receiving gcode so there is nothing to change but I think that it will be good to make this better estimation available also on other OctoPrint sources (web/mobile etc) so this plugin will override OctoPrint estimation with estimation from last M73 gcode sended.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["progress","eta","estimation","m73"]
},

{
"id": "/plugins/wemoswitch",
"url": "/plugins/wemoswitch/",
"date": "2018-09-18 00:00:00 -0500",
"title": "OctoPrint-WemoSwitch",
"description": "Plugin to control Belkin Wemo devices from OctoPrint web interface.",
"author": "jneilliii",
"content": "Wemo SwitchThis plugin allows for the control of Belkin Wemo devices via navbar buttons and gcode commands.ScreenshotsSettingsOnce installed go into settings and enter the name of your wemo device. Adjust additional settings as needed.  Device Name          Name configured in the Wemo App associated with the plug.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by device name.  For example if your plug is living_room your gcode command would be M80 living_room        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Belkin","Wemo","Smartplug","Power"]
},

{
"id": "/plugins/kronos_data_collector",
"url": "/plugins/kronos_data_collector/",
"date": "2018-09-26 00:00:00 -0500",
"title": "Project Kronos Data Collector",
"description": "Help build the Project Kronos print-failure autodetection neural network",
"author": "Jacob Paniagua",
"content": "Project KronosProject Kronos is an effort to create a webcam-based Neural Network to classify snapshots from a 3D Printer as “Failed” or “Successful”. This will be implemented in real-time as an Octoprint plugin to automatically pause the printer and alert the user of the potential error.The Project Kronos Data CollectorAs you may know, training a neural network requires a massive amount of data to create a complete model that can accurately classify an input. In this case, Project Kronos will need thousands, possibly hundreds of thousands, of images to train the model with. While there are plenty of timelapses and succesful print photos available on the internet, it’s very hard to find any failed prints. The point of this plugin is to allow users to automatically upload images and timelapses of their prints in the background, helping to create Project Kronos.Everything is done in the background, never bothering the user with pop-ups or the like. It can, of course, be easily disabled within the plugin settings.",
"tags": ["dataset","data","Kronos","neural","network"]
},

{
"id": "/plugins/OctoAutoremote",
"url": "/plugins/OctoAutoremote/",
"date": "2018-09-28 00:00:00 -0500",
"title": "OctoPrint_AutoRemote",
"description": "A quick Autoremote/Tasker plugin for OctoPrint",
"author": "Craig Trunzo",
"content": "OctoAutoRemoteA simple plugin to send messages to the Android app AutoRemote for use in Tasker by JoaoMGCDSetupInstall via the bundled Plugin Managervia this URL:https://github.com/trunzoc/Octoprint_Autoremote/archive/master.zipConfiguration  If you have not already done so, install AutoRemote on your Android phone.  Register or log in to AutoRemote      click the Phone icon.            click the IFTTT icon. We aren’t using IFTTT, but this is the easiest way to get your key and create a “Sender”.            A “Register IFTTT” window will open.  Type anything you want, I just used “OctoAutoRemote”, and hit OK.            Enter the same thing you entered for step 5 here then hit OK.            AutoRemote will ask to generate a URL that has your personal key. Hit OK. Choose the delivery method of your choice and send it. Something on your PC like email is preferable so you can copy/paste. If it does not ask to shar eit automatically, long-press the device that was created and choose “Generate IFTTT URL”        The URL sent will be something like https://autoremotejoaomgcd.appspot.com/sendmessage?key={a rediculously long key that identifies you}&amp;sender={name form step 5/6}&amp;message=MESSAGE_HERE  Open the OctoAutoRemote plugin settings in OctoPrint.  Enter the KEY value from the URL to the Personal Key field.  Add the SENDER value to the sender field.  Enable the events that you want to trigger an AutoRemote message  click save.TASKERTasker is a complicated beast.  I’ll leave that to you to configure.",
"tags": ["android","tasker","autoremote","autoapps"]
},

{
"id": "/plugins/gitfiles",
"url": "/plugins/gitfiles/",
"date": "2018-09-29 00:00:00 -0500",
"title": "OctoPrint-GitFiles",
"description": "Use a github repository for keeping your OctoPrint Files collection up-to-date.",
"author": "OutsourcedGuru",
"content": "With this plugin, you can use a github repository for keeping your OctoPrint Files collection up-to-date. Publish your sliced files from a local repository on your workstation, then select to pull the latest from this github repository.",
"tags": ["change management","source control","github","git","file manager"]
},

{
"id": "/plugins/nexmonotifier",
"url": "/plugins/nexmonotifier/",
"date": "2018-10-02 00:00:00 -0500",
"title": "OctoPrint-Nexmonotifier",
"description": "Octoprint plugin for print completion notifications using Nexmo SMS gateway",
"author": "Gert Kjerslev",
"content": "Receive SMS/Text notifications when OctoPrint jobs are complete.",
"tags": ["notification","SMS","Text message"]
},

{
"id": "/plugins/ABL_Expert",
"url": "/plugins/ABL_Expert/",
"date": "2018-10-04 00:00:00 -0500",
"title": "Auto bed leveling expert",
"description": "Marlin auto bed leveling control, mesh correction, and z probe handling",
"author": "razer",
"content": "",
"tags": ["probe","leveling","bilinear","auto bed leveling","abl","marlin"]
},

{
"id": "/plugins/tuyasmartplug",
"url": "/plugins/tuyasmartplug/",
"date": "2018-11-12 00:00:00 -0600",
"title": "OctoPrint-TuyaSmartplug",
"description": "Plugin to control Tuya based Smartplug devices from OctoPrint web interface.",
"author": "ziirish",
"content": "Tuya SmartplugWork based on OctoPrint-TPLinkSmartplug and python-tuya.This plugin controlls Tuya-based SmartPlugs.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Tuya Smartplug device. Adjust additional settings as needed.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Device ID          Plug ID.        Local Key          Local key to cypher data.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.2 your gcode command would be M80 192.168.1.2        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Preparatory workIn order to be able to interact with your Tuya smart plugs, you need to retrieveboth the Device ID and the Local Key. You’ll find information to get thosein the python-tuya wiki.",
"tags": ["Tuya","Smartplug","Power"]
},

{
"id": "/plugins/active_filters_extended",
"url": "/plugins/active_filters_extended/",
"date": "2018-11-17 00:00:00 -0600",
"title": "Active Filters Extended",
"description": "Makes the enabled terminal filters persistent between browser reloads and from different connecting clients.",
"author": "jneilliii",
"content": "Active Filters ExtendedThis plugin makes use of knockout.observableStorage plugin licensend under MIT license and is a fork of OctoPrint-ActiveFilters plugin.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["filters","regex","terminal"]
},

{
"id": "/plugins/dragon_order",
"url": "/plugins/dragon_order/",
"date": "2018-11-18 00:00:00 -0600",
"title": "OctoPrint-DragonOrder",
"description": "Plugin that allows the re-ordering of navbar, sidebar, and tabs by dragging them into desired location within the UI.",
"author": "jneilliii",
"content": "OctoPrint-DragonOrderPlugin that allows the re-ordering of navbar, sidebar, and tabs by dragging them into desired location within the UI.Note: Plugin name is a play on words similar to Drag and Drop being misheard as Dragon Drop.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Draggable","Navbar","Sidebar","Tabs","UI"]
},

{
"id": "/plugins/signalnotifier",
"url": "/plugins/signalnotifier/",
"date": "2018-12-04 00:00:00 -0600",
"title": "OctoPrint_Signal-Notifier",
"description": "Print completion notifications using Signal. Requires signal-cli.",
"author": "Andrew Erickson",
"content": "Receive Signal messages when OctoPrint jobs are complete.Requires signal-cli to be installed and configured. See the plugin’s github page for more information.",
"tags": ["notification"]
},

{
"id": "/plugins/MyMiniFactory",
"url": "/plugins/MyMiniFactory/",
"date": "2018-12-11 00:00:00 -0600",
"title": "OctoPrint-MyMiniFactory",
"description": "Plugin to integrate with MyMiniFactory and enable click and print functionality.",
"author": "jneilliii",
"content": "OctoPrint-MyMiniFactoryThis plugin adds the ability to register your OctoPrint based printer to the MyMiniFactory® Click &amp; Print service. All slicing is completed on the MyMiniFactory® servers and is optimized for printing PLA to specific supported printers. E-Mail MyMiniFactory® here if you would like to get your printer added.InstallInstall via the bundled Plugin Manageror manually using this URL:https://github.com/jneilliii/OctoPrint-MyMiniFactory/archive/master.zipSetupOnce installed go into OctoPrint Settings &gt; MyMiniFactory® and select your connected printer’s manufacturer and model and click the register button.  A QR code will be generated that can be scanned in the MyMiniFactory® mobile application (Android or iOS) and associates with your account. Once registration is complete the printer should be listed in the mobile application as either Free, Busy, or Offline based on the current state.PrintingFrom within the mobile application find a verified Click &amp; Print model and click the Print button.  Select your newly added printer from the top of the list under Your Printers and press the Print This Object button.  The file will be sliced and added to your printer queue; find the newly added file and press the Print button. The gcode file will be downloaded to OctoPrint and start printing.DisclaimerThis plugin adds a tab to the OctoPrint interface that loads the MyMiniFactory® website within an iframe with consent from My Mini Factory Ltd. It was built by jneilliii using the MyMiniFactory API.The MyMiniFactory® name, logo, website, and the Click &amp; Print service is copyright, trademark, and owned by My Mini Factory Ltd., see their Terms and Conditions for additional information regarding the use of their website and service(s).By using this plugin you release jneilliii of any liability related to the use of the MyMiniFactory® service.OctoPrint-MyMiniFactory uses the Eclipse Paho Python Client under the hood, which is dual-licensed and used here under the terms of the EDL v1.0 (BSD).Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MyMiniFactory","Remote"]
},

{
"id": "/plugins/SlicerSettingsParser",
"url": "/plugins/SlicerSettingsParser/",
"date": "2018-12-22 00:00:00 -0600",
"title": "OctoPrint-SlicerSettingsParser",
"description": "Plugin to analyze gcode for slicer settings comments and add additional metadata of such settings.",
"author": "T6",
"content": "NOTE: Only supports Slic3r and Simplify3D currently; suggest more in issues; contributions welcome!Note: this plugin has not been tested with versions under 1.3.10; they may not work!This plugin is useless without another plugin to use the metadata. Those can be found here.ConfigurationPython regexes (Advanced)This plugin uses python regexes to parse the gcode.Syntax can be easily found on the web.There should be two named capturing groups, key and val.Multiple regexes should be listed on seperate lines, ordered by precedence.Any chars are allowed in the groups; \\n will be replaced by newlines.See the wiki for examples.",
"tags": ["gcode","analysis","slicer settings"]
},

{
"id": "/plugins/SlicerSettingsTab",
"url": "/plugins/SlicerSettingsTab/",
"date": "2018-12-22 00:00:00 -0600",
"title": "OctoPrint-SlicerSettingsTab",
"description": "Adds tab which displays slicer settings of selected gcode file.",
"author": "T6",
"content": "This plugin requires also installing SlicerSettingsParseror another plugin that adds a metadata dict under slicer_settings.",
"tags": ["gcode","analysis","slicer settings"]
},

{
"id": "/plugins/IFTTT",
"url": "/plugins/IFTTT/",
"date": "2018-12-29 00:00:00 -0600",
"title": "OctoPrint-IFTTT",
"description": "Connects OctoPrint events to IFTTT",
"author": "T6",
"content": "Note: this plugin has not been tested with versions under 1.3.10; they may not work!Advantages:  Allows for multiple IFTTT accounts to be connected  Allows for multiple triggers for each event  Allows customization of Value[1-3] placeholders; either static or a property of the event payload  Allows for default prefixes so you don’t have to type in lots of triggers  Works with custom events!**May not be (officially) supported; see #2965 for more info.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/tjjfvi/OctoPrint-IFTTT/archive/master.zipConfigurationMakerkeysA unique API key for IFTTT. Go here and click on “Documentation”. On the documentation page it will tell you your key: “Your key is: …”. You can put multiple makerkeys, seperated by newlines, here.Default prefixesDefault prefixes for the triggers. If you have an event MyEvent and prefixes prefix1- and prefix2-, it will, by default make the triggers prefix1-MyEvent and prefix2-MyEvent. Seperate the prefixes with newlines.EventsDefine events to send to IFTTT.TriggersA list of triggers to trigger on IFTTT.ValuesIFTTT Webhooks allows for a payload with three values. It will interpret this string like so:  If the value begins with a dot (.), it will use that prop of the event payload (e.g. .name for PrintDone)  If it begins with a colon (:) it will use the string after the colon  Otherwise it will just send the plain text",
"tags": ["notification","iot","ifttt","tp-link","tplink"]
},

{
"id": "/plugins/BetterHeaterTimeout",
"url": "/plugins/BetterHeaterTimeout/",
"date": "2019-01-02 00:00:00 -0600",
"title": "OctoPrint-BetterHeaterTimeout",
"description": "Turns off heaters after specified time being on and unused",
"author": "T6",
"content": "Note: this plugin has not been tested with versions under 1.3.10; they may not work!Advantages:  Supports configuring timeout length  Supports before/after gcode  Supports notification via Web UI  Fires a custom event * when the heaters timeout, so one can be notified or otherwise hook on the event.*May not be (officially) supported; see #2965 for more info.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/tjjfvi/OctoPrint-BetterHeaterTimeout/archive/master.zipIf you want to trigger on the custom event, use the event name HeaterTimeout.The payload values are heater, time_elapsed, and timeout.ConfigurationThe checkbox enables/disables the timeout, and the number input changes the timeout length.After target temp changes vs after heating startsIf set to the former, changing the target temp will reset the timeout.Before/after GCODEGCODE commands to run before/after the heaters are disabled.You can use the placeholders $heater, $time_elapsed. and $timeout.I think the names are pretty self-explanatory.Examples:M117 $heater timed out ; display that on the screenM300 S100 P200 ; chirp",
"tags": ["temperature","heater","timeout","heater timeout","custom event"]
},

{
"id": "/plugins/LCD1602_I2cdisplay",
"url": "/plugins/LCD1602_I2cdisplay/",
"date": "2019-01-28 00:00:00 -0600",
"title": "octoprint-LCD1602",
"description": "This plug-in allows you to control a 16X2 lcd display (hd44780 connected to port I2C) to display the octoprint status. It is useful for people like me who have a printer without a display. It indicates on which port the printer is connected, the progress of printing. It also displays the remaining print time (thanks to a simple method). See https://github.com/n3bojs4/octoprint-LCD1602/blob/master/CHANGELOG.md for more details.",
"author": "n3bojs4",
"content": "",
"tags": ["display","loading bar","events"]
},

{
"id": "/plugins/hardwarepwm",
"url": "/plugins/hardwarepwm/",
"date": "2019-02-08 00:00:00 -0600",
"title": "OctoPrint-Hardwarepwm",
"description": "Plugin for true hardware PWM on the Raspberry Pi",
"author": "Dario Rostirolla",
"content": "Plugin that uses the PIGPIO library for hardware PWM, thus creating a flicker free pwm signal for LED strip dimming. Requires you to install pigpio through apt-get and to start/enable the pigpiod daemon.",
"tags": ["hardware pwm","control","pwm","leds"]
},

{
"id": "/plugins/webcamstreamer",
"url": "/plugins/webcamstreamer/",
"date": "2019-02-08 00:00:00 -0600",
"title": "OctoPrint-WebcamStreamer",
"description": "Plugin that re-encodes the webcam and streams it to streaming sites like YouTube Live or Twitch.Tv",
"author": "Adi Linden",
"content": "OctoPrint-WebcamStreamerOverviewPlugin that adds a tab to OctoPrint for viewing, starting, and stopping a live stream.Credits:Inspired by and based on the work by  Alex Ellis found here  jneilliii OctoPrint-YouTube Live plugin found hereRequirements for StreamingAlthough this plugin should work with a wide variety of webcam, it has only been tested with a Raspberry Pi cam running on OctoPi and made available via OctoPrint mjpeg-streamer. This plugin relies on a Docker container running FFmpeg to convert the mjpeg-streamer video stream and pipe it to a live streaming service. The YouTube Live and Twitch.Tv streaming services have been tested.InstallationUsing ssh access the OctoPi and install docker:curl -sSL https://get.docker.com | shsudo usermod pi -aG dockersudo rebootPull the adilinden/rpi-ffmpeg image:docker pull adilinden/rpi-stream:latestInstall OctoPrint-WebcamStreamer via one of these 3 methods, also in-depth explained on the official OctoPrint Installing a plugin page.      Open the plugin repository in the Plugin Manager’s settings dialog, search for “OctoPrint-WebcamStreamer” and install with the “Install” button.        Open the plugin repository in the Plugin Manager’s settings dialog, click on “Get more…” and enter the https://github.com/adilinden-oss/octoprint-webcamstreamer/archive/master.zip URL in the “… from URL” box. Click the Install button to complete the installation.        Access the OctoPi command line and run the ~/oprint/bin/pip install https://github.com/adilinden-oss/octoprint-webcamstreamer/archive/master.zip command.  SetupPull up Webcam Streamer in the OctoPi settings panel  Enter your streaming providers embed URL for your live stream video into the “Viewer Embed URL” field.                  YouTube: Your “YouTube Channel ID” is needed to construct the embed URL. It can be found on your Advanced settings page. With the “YouTube Channel ID” in hand, constrcut the URL like this:        https://www.youtube.com/embed/live_stream?channel=CHANNEL_ID                    Twitch: Your Twitch username is needed to construct the embed URL. With your username in hand, construct the URL like this:        https://player.twitch.tv/?channel=USERNAME              Enter your streaming providers ingest or stream server URL into the “Stream Server URL” field.                  YoutTube: Your complete URL is created by appending your “Stream name/key” to your “Server URL”. Both values can be found on your Live dashboard page. With both values in hand, the complete “Stream Server URL” should look like this:        rtmp://a.rtmp.youtube.com/live2/xxxx-xxxx-xxxx-xxxx                    Twitch: Your complete URL is created by appending your “Primary Stream key” to the rtmp://live.twitch.tv/app/ URL. The “Primary Stream key” can be found on your Dashboard Settings page. The complete “Stream Server URL” should look like this:        rtmp://live.twitch.tv/app/live_xxxxxxxxx_xxxxxxxxxx                  Enter your OctoPi webcam URL into the “OctoPi Webcam URL” field. A fully qualified URL is needed containing either the resolvable hostname or the IP address of the OctoPi. The “OctoPi Webcam URL” typically looks something like this:      http://192.168.10.79:8080/?action=stream      Terse setup information is also availabe via the expandable “Additional Information” section on the “Webcam Streamer” settings page.Advanced SetupAdvanced option allow for modification of the FFmpeg command line for use with other streaming services or cameras. It also allows for a different Docker container to be specified if desired or needed.      “Webcam Frame Rate” default is 5 frames per second which is appropriate for the Raspberry Pi webcam.        “Docker Image” default is adilinden/rpi-stream:latest. This value needs to match the docker image installed in the setup steps.        “Docker Container” default is WebStreamer. This value is rather arbitrary but the default makes sense (to me).        “FFmpeg Command” allows for customization of the ffmpeg command line. Variable substitution is performed to insert setup values into the ffmpeg command line.    Default command line for ffmpeg is:      ffmpeg -re -f mjpeg -framerate 5 -i {webcam_url} -ar 44100 -ac 2 -acodec pcm_s16le -f s16le -ac 2 -i /dev/zero -acodec aac -ab 128k -vcodec h264 -pix_fmt yuv420p -framerate {frame_rate} -g {gop_size} -strict experimental -filter:v {filter} -f flv {stream_url}        The following variable substitutions are available:                            FFmpeg Cmd Var          Settings value                                      {stream_url}          Stream Server URL                          {webcam_url}          OctoPi Webcam URL                          {frame_rate}          OctoPi Webcam Frame Rate                          {gop_size}          Internal Calculated Value (frame rate * 2)                          {filter}          Internal Calculated Value                    ",
"tags": ["Stream","Webcam"]
},

{
"id": "/plugins/filament_sensor_ng_orangepi",
"url": "/plugins/filament_sensor_ng_orangepi/",
"date": "2019-02-18 00:00:00 -0600",
"title": "FilamentSensor OrangePi",
"description": "A filament monitor that pauses the print when your filament runs out and lets you restart it.",
"author": "Deadly667",
"content": "OverviewPause printing when the 3D printer runs out of filament.Credits:Inspired by and based on the work byOctoPrint-FilamentSensor-ng plugin by Red-M found hereConfigurationAfter installation, configure the plugin via OctoPrint Settings interface.The pin being used needs to be entered by name (e.g. PA01, PC07).OrangePI OS ConfigurationSince we are accessing the GPIO as a non root user we need to configure the OS to allow this. Here’s the copy of the library documentation on how to do it:If you want to be able to use the library as a non root user, you will need to setup a UDEV rule to grant you permissions first.  This can be accomplished as follows: $ sudo usermod -aG gpio &lt;current_user&gt; $ sudo nano /etc/udev/rules.d/99-gpio.rulesThat should add your user to the GPIO group, create a new UDEV rule, and open it in the Nano text editor.  Enter the following into Nano   SUBSYSTEM==\"gpio\", KERNEL==\"gpiochip*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys/class/gpio/export /sys/class/gpio/unexport ; chmod 220 /sys/class/gpio/export /sys/class/gpio/unexport'\"    SUBSYSTEM==\"gpio\", KERNEL==\"gpio*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value ; chmod 660 /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value'\"press ctrl-x, Y, and ENTER to save and close the file.  Finally, reboot and you should be ready to use OPi.GPIO as a non root user.Issues with OPI GPIO libraryhttps://github.com/rm-hull/OPi.GPIO/pull/28 solves the issues with PI GPIO library and the race condition that was preventing normal operations. It is available in release v0.3.4 and up so make sure you have latest OPI GPIO library. To upgrade to latest OPI GPIO library login to your octoprint server as user pi and execute: $ cd OctoPrint/  $ venv/bin/pip install --upgrade OPi.GPIO",
"tags": ["filament","sensor","orangePi"]
},

{
"id": "/plugins/printtrack",
"url": "/plugins/printtrack/",
"date": "2019-02-25 00:00:00 -0600",
"title": "OctoPrint-PrintTrack",
"description": "Keep track of your printer and prints with some simple additions & customizability.",
"author": "ElectricSquid",
"content": "OctoPrint-PrintTrackThis plugin is meant to help you keep track of your printers progress and status. Currently it will display the printers status in the tab of OctoPrint in the browser. There are customization options to change how it is displayed and also has adjustable strings so you can translate them or just make them something else.Install &amp; SetupInstall via the bundled Plugin Manager or manually using this URL:https://github.com/ElectricSquid/OctoPrint-PrintTrack/archive/master.zipReporting Issues &amp; ImprovmentsIf you encounter any issues or bugs with the plugin please feel free to make an issue on the repo. I also fully support additions to the plugin from third partys. If you have an idea or an already developed solution that would implement with the plugin well please submit it to the github repo and I will gladly consider additions and contributions.See the github page for more details.",
"tags": ["connection","status","monitor","monitoring","notification","notifications","progress","remote monitoring","title"]
},

{
"id": "/plugins/rgb_status",
"url": "/plugins/rgb_status/",
"date": "2019-02-27 00:00:00 -0600",
"title": "RGB Status",
"description": "Adds RGB LED support to OctoPrint with the ability to choose colors and effects based on the current status of your printer",
"author": "Eric Higdon",
"content": "OctoPrint-Rgb_statusAdds RGB LED support to OctoPrint with the ability to choose effects based on the current status of your printerSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/EricHigdon/OctoPrint-Rgb_status/archive/master.zipRunning Without RootSince OctoPrint should usually not be run as root, the default LED pin is 10 (SPI). For details about what may be required to use SPI on your instance, see https://github.com/jgarff/rpi_ws281x#spiReporting Issues &amp; ImprovmentsIf you encounter any issues or bugs with the plugin please feel free to make an issue on the repo. I also fully support additions to the plugin from third partys. If you have an idea or an already developed solution that would implement with the plugin well please submit it to the github repo and I will gladly consider additions and contributions.See the github page for more details.",
"tags": ["RGB LED","Addressable LED","Progress","Effects","WS2811","WS2812"]
},

{
"id": "/plugins/xMattersIntegration",
"url": "/plugins/xMattersIntegration/",
"date": "2019-03-04 00:00:00 -0600",
"title": "xMatters Integration",
"description": "Event notifications using xMatters",
"author": "svv2014",
"content": "The plugin allows OctoPrint to send notifications on events using xMatters.SetupxMatter integration setup  Open your xMatters page  go to page: Developer &gt; Communication Plans  Import zip file from xMatters/OctoPrintIntegration.zip          this will create communication plan for integration        On communication plan press Edit and choose Integration Builder  You should see one configured Inbound integration          Note if Inbound integrations configuration was not imported you may need to create once with authentication method equals to API key.        Open this configuration and at the bottom you will find all needed credentialsConfiguration  Take API Key, Secret, Integration URL from xMatters integration and set it in plugin configuration          Note: for recipients field use comma separated user id        Choose events you interested in and enjoy.",
"tags": ["xMatters","events","notifications","monitoring"]
},

{
"id": "/plugins/curalegacy",
"url": "/plugins/curalegacy/",
"date": "2019-03-28 00:00:00 -0500",
"title": "CuraEngine Legacy",
"description": "Plugin for slicing via the legacy version of CuraEngine from within OctoPrint, unbundled from OctoPrint starting with version 1.3.11",
"author": "Gina Häußge",
"content": "The CuraEngine Legacy Plugin allows slicing of STL files uploaded to OctoPrint directly via the legacy version of CuraEngine (up to and including version 15.04.x). It was bundled with OctoPrint up until version 1.3.10.  📝 Note  Versions of CuraEngine later than 15.04.x have changed their calling parameters in such a way that this plugin is not compatible to it. For this reason, please use only CuraEngine versions up to and including 15.04, as available in the legacy branch of the CuraEngine repository on Github.The plugin offers a settings module that allows configuring the path to the CuraEngine Legacy executable to use, as well as importing and managing slicing profiles to be used. Please note that the CuraEngine Legacy plugin will use the printer parameters you configured within OctoPrint (meaning bed size and extruder count and offsets) for slicing.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/OctoPrint/OctoPrint-CuraEngineLegacy/archive/master.zipFirst StepsBefore you can slice from within OctoPrint, you’ll need to  Install CuraEngine Legacy  Configure the path to CuraEngine Legacy within OctoPrint  Export a slicing profile from Cura &lt;15.04.x and import it within OctoPrintOctoPi ships with steps 1 and 2 already done, you only need to supply one or more slicing profiles to get going :)If you are coming from an OctoPrint version prior to 1.3.11 and already had the then still bundled version of this pluginconfigured, your configuration &amp; profiles will be migrated.Installing CuraEngine LegacyYou’ll need a build of legacy branch of CuraEngine in order to be able to use the Cura Legacy OctoPrint plugin. You can find the legacy branch here.Compiling for RaspbianBuilding on Raspbian Jessie and later is as easy as:sudo apt-get -y install gcc-4.7 g++-4.7git clone -b legacy https://github.com/Ultimaker/CuraEngine.gitcd CuraEnginemakeAfter this has completed, you’ll find your shiny new build of CuraEngine in the build folder (full path for above example: ~/CuraEngine/build/CuraEngine).Using Cura ProfilesThe CuraEngine Legacy Plugin supports importing your existing profiles for CuraEngine Legacy up to and including Cura 15.04.x. Newer CuraEngine releases (e.g. 15.06 or 2.x) use a different internal format that will not work with the Cura Legacy Plugin.You can find downloads of Cura 15.04.x for Windows, Mac and Linux on Ultimaker’s download page.In order to export a slicing profile from the legacy Cura desktop UI, open it, set up your profile, then click on “File” and there on “Save Profile”. You can import the .ini-file this creates via the “Import Profile” button in the CuraEngine Legacy Settings within OctoPrint.ConfigurationThe Cura plugin needs to be configured with the full path to your copy of the CuraEngine Legacy executable that it’s supposed to use. You can do this either via the CuraEngine Legacy plugin settings dialog or by manually configuring the path to the executable via config.yaml, example:plugins:  curalegacy:    cura_engine: /path/to/CuraEngine",
"tags": ["cura","cura engine","cura legacy","slicer","gcode","stl"]
},

{
"id": "/plugins/bettergrblsupport",
"url": "/plugins/bettergrblsupport/",
"date": "2019-04-01 00:00:00 -0500",
"title": "Better Grbl Support",
"description": "Provides core functionality and UI integration for GRBL based engravers and CNC machines",
"author": "Shell M. Shrader",
"content": "This plugin was inspired by mic159’s Grbl Support plugin (https://plugins.octoprint.org/plugins/octoprint-grbl-plugin/).  His plugin gets you 90% of the way there for adding Grbl support to Octoprint but had a couple limitations and lacked some bells and whistles from a UI and configuration perspective.Better Grbl Support utilizes mic159’s gcode receiver parser (with significant modifications) and does much, much more:  Replaces Octoprint’s Control tab with its own Grbl Control tab  Execute bounding box (framing) routines based on origin location and supplied dimensions  Computes selected file dimensions and pre-populates framing length/width fields  Converts Grbl error and alarm #s to meaningful descriptions  Grbl Homing support  Modify all Grbl ($$) settings via Better Grbl Support settings  Backup and restore Grbl ($$) settings  Click on the webcam image to enlarge it to its native resolution  Visually updates State / X / Y / Speed / Power dynamically, even while printing!  Weak Laser Toggle, Sleep, Reset, and Unlock buttons in the Grbl Control tab  Rewrites Octoprint’s annoying hardcoded M115 (Hello) queries as M5 requests  Rewrites M105 (temperature updates) as Grbl status updates  Suppresses M110 (reset line #) requests  Rewrites M400 (Finish moves) using Grbl Dwell  Rewrites M114 (current position) using Grbl Positioning  Implements M999 for reseting Grbl (^X)  Hides the Octoprint Control, Temperature and GCode Viewer tabs  Optionally adds Laser Commands and State sections to the Control tab  Suppresses status update reporting during GCODE streaming  No need to ignore firmware errors or track down other Octoprint nuance settings  Automatically disables Model Size Detection  Automatically disables sending checksums  Automatically disables the Printer Safety Check plugin  Most configuration options are accessible via Plugin SettingsSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/synman/OctoPrint-Bettergrblsupport/archive/master.zipConfigurationThere are some meaningful caveats regarding the installation and configuration of this plugin.  If you use it in a multi-printer / profile environment it will very likely cause problems for your other profiles as it makes GLOBAL configuration changes behind the scenes.  A future version may resolve this, but understand that currently multi-profile installations are not currently supported.Furthermore, a number of global configuration changes are made blindly and I have no way of reverting these changes.  Be prepared to manually edit your config.yaml and/or manually revert global settings if you uninstall / disable this plugin to restore your Octoprint installation to its prior state.Pay special attention to the following config.yaml configuration parameters:  appearance / components / temperature tab  controls (any / all customizations made to it)  feature / temperatureGraph  feature / gcodeVisualizer  feature / modelSizeDetection  serial / neverSendChecksum  serial / checksumRequiringCommands  serial / helloCommand  plugins / _disabled / printer_safety_check  appearance / components / disabled / tab",
"tags": ["grbl","laser","engraver","cnc"]
},

{
"id": "/plugins/DryRun",
"url": "/plugins/DryRun/",
"date": "2019-04-02 00:00:00 -0500",
"title": "DryRun",
"description": "Print without heating/extruding.",
"author": "Olli",
"content": "A Octoprint-Plugin that allows to execute a print without heating your bed or nozzle, turning on any fans, or extruding any filament.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)DetailsThe implementation is based on the “test-mode” from OctolapseFor implementation details please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/marlin_flasher",
"url": "/plugins/marlin_flasher/",
"date": "2019-04-02 00:00:00 -0500",
"title": "Marlin Flasher",
"description": "Plugin that allows you to flash your printer to the latest Marlin version",
"author": "Renaud Gaspard",
"content": "Adds the ability to easily update your Arduino and Platform.io based printer firmware with just a few clicks directly through OctoPrint.You can install multiple libraries if your firmware needs it, upload your firmware code, and just hit Flash.Please be aware that I’m not responsible for any damage made to your printer if something had to go wrong during the flashing process.See the README or the wiki for more information on how to configure and use this plugin.",
"tags": ["firmware","updater","flasher","arduino","platformio","marlin"]
},

{
"id": "/plugins/FanSpeedMirror",
"url": "/plugins/FanSpeedMirror/",
"date": "2019-04-13 00:00:00 -0500",
"title": "OctoPrint-FanSpeedMirror",
"description": "Mirror the parameter(s) of GCode commands M106, M107 to scripts on the OctoPrint host",
"author": "Brad Morgan",
"content": "Mirror the parameter(s) of GCode commands M106, M107 to scripts on the OctoPrint hostExample bash scripts and a test gcode file are in extrashttp://plugins.octoprint.org/plugin/FanSpeedMirror/",
"tags": ["UI","Controls"]
},

{
"id": "/plugins/repeatingcommand",
"url": "/plugins/repeatingcommand/",
"date": "2019-04-16 00:00:00 -0500",
"title": "OctoPrint_RepeatingCommand",
"description": "Octoprint plugin for running a command at an interval during prints.",
"author": "Andrew Erickson",
"content": "Runs a command at a specified interval during prints.I use it to trigger my home automation to run an exhaust fan (that normally turns off after 5 minutes) when printing.",
"tags": ["events","control","integration","command","automation"]
},

{
"id": "/plugins/octoprint_complicated",
"url": "/plugins/octoprint_complicated/",
"date": "2019-04-23 00:00:00 -0500",
"title": "OctoPrint-Complicated",
"description": "Display Print Progress on your Apple Watch using the Complicated iOS App",
"author": "Mike Lyons",
"content": "OctoPrint Complicated IntegrationThis plugin allows you to show your 3d print progress on your Apple Watch by integrating withthe Complicated iOS/Apple Watch app.What is Complicated?Complicated is a simple app that lets you update your Apple Watch face complications with WebHooks. You can also use IFTTT and Zapier to update the WebHooks.https://mikelyons.org/complicated?utm_source=octoprint-complicated",
"tags": ["apple watch","ios","progress"]
},

{
"id": "/plugins/PCA9685LEDStripControl",
"url": "/plugins/PCA9685LEDStripControl/",
"date": "2019-05-07 00:00:00 -0500",
"title": "PCA9685 LED Strip Control",
"description": "OctoPrint plugin for controling RGB LED Strips via PCA9685 over I2C",
"author": "Ozgun Ayaz",
"content": "OctoPrint-PCA9685LEDStripControlOctoPrint plugin that intercepts M150 GCode commands and controls LEDs connected to PCA9685 over I2C.Implements the M150 command syntax from the latest Marlin.    M150: Set Status LED Color - Use R-U-B for R-G-B Optional (W)    M150 R255       ; Turn LED red    M150 R255 U127  ; Turn LED orange (PWM only)    M150            ; Turn LED off    M150 R U B      ; Turn LED white    M150 W          ; Turn LED white if using RGBW strips (optional)Setup      Connect PCA9685 (address 0x40) and enable I2C in configuration \tsudo raspi-config        Install via the bundled Plugin Manageror manually using this URL: \thttps://github.com/ozgunawesome/OctoPrint-PCA9685LEDStripControl/archive/master.zip        Restart OctoPrint  ConfigurationConfigure the PCA9685 pins via the OctoPrint settings UI.",
"tags": ["pca9685","i2c","hardware pwm","pwm","raspberry pi","led","rgb","gcode"]
},

{
"id": "/plugins/preprintservice",
"url": "/plugins/preprintservice/",
"date": "2019-05-12 00:00:00 -0500",
"title": "OctoPrint-PrePrintService",
"description": "This service supports your 3D printing workflow by providing auto-rotation and slicing functionality.",
"author": "Christoph Schranz",
"content": "OctoPrint-PrePrintServiceThis service supports your 3D printing workflow by utilizing auto-orientationand slicing functionality.The PrePrint Service is based on:  The auto-rotation software for FDM 3D printing Tweaker-3  The slicing software Slic3rYou can also use a similar and prefered tool-chain by using Curaas the Slicing software and with the Plug-InsAuto-Orientationand Octoprint Connection.WorkflowThe full workflow can be deployed either on a single machine or more generally on two separated nodes as described below:The following steps will be done:  Upload a model on Octoprint and click on the Slice button in the file bar.  The model will be auto-rotated for a proper 3D print by the Tweaker-3 software.  The optimized model will be sliced using Slic3r.  The final machine code will be sent back to the octoprint server.  The printing can be started.Each step can be adjusted as described in the settings.Requirements  One server node that is connected to your 3D printer, like a Raspberry Pi.  One server node for pre-processing, which has at least 2GHz CPU frequency.If the node connected to the printer is strong enough, one server suffices.  Optional: Install Docker version 1.10.0+and Docker Compose version 1.6.0+on the more powerful node.Setup1. Install the PluginInstall the Octoprint-PrePrint Service in the Plugin Manager, e.g., from the archive’s URL https://github.com/christophschranz/OctoPrint-PrePrintService/archive/master.zipor manually using the git’s URL on the Printer-Controller2. Set up the (external) preprocess services in DockerIn order to make the service highly available, it is recommended to deploy thePrePrint-Service in Docker. If you are not familiar with docker yet,have a quick look at the links in the requirements-section.Then run the application locally with:git clone https://github.com/christophschranz/OctoPrint-PrePrintServicecd OctoPrint-PrePrintServicedocker-compose up --build -ddocker-compose logs -fOptional: The docker-compose.yml is also configured to run in a given docker swarm, adapt the docker-compose.yml to your setup and run:docker-compose builddocker-compose pushdocker stack deploy --compose-file docker-compose.yml preprintserviceThe service is available on localhost:2304/tweak(from the hosting node),where a simple UI is provided for testing the PrePrint Service.Use docker-compose down to stop the service. (If you ever wish :wink: )ConfigurationConfigure the plugin in the settings and make sure the url for the PrePrint service is setcorrect:Note that the octoprint URL must not be localhost, as the tweak-service is deployed ina docker network where it is unable to locate it’s hosts local network.Finally, go back to the home UI, click on the Slice-Button of uploaded STL-Models andproduce printable machinecode via this Preprocessing-Plugin.TestingTo test the whole setup, do the following steps:      Visit localhost:2304/tweak, select a stl model fileand make an extended Tweak (auto-rotation) without slicing. The output should bean auto-rotated (binary) STL model. If not, check the logs of the docker-serviceusing docker-compose logs -f in the folder where the docker-compose.yml is located.        Now, do the same with slicing, the resulting file should be a gcode file of the model.Else, check the logs of the docker-service using docker-compose logs -f in thesame folder.        Visit the Octoprint server, click on the Slice-Button of the uploadedSTL-Model in the file bar and produce printable machinecode via thisPrePrint-Service Plugin.. After some seconds a .gco file should be uploaded. Note that in a small time frame a.gco file with only one line and 83 bytes can appear. This is expected and should be overwrittenafterwards after a short time.If this doesn’t work, start the octoprint server per CLI with octoprint serveand track the logs. The following two lines are expected:     2019-04-07 22:28:44,301 - octoprint.plugins.preprintservice - INFO - Connection to PrePrintService on http://192.168.48.81:2304/tweak is ready, status code 200 2019-04-07 22:28:44,321 - octoprint.plugins.preprintservice - INFO - Connection to Octoprint server on http://192.168.48.43:5000/api/version?apikey=A943AB47727A461F9CEF9EXXXXXXXX is ready, status code 200        If the the Octoprint Server’s URL is invalid, you will see this:     2019-04-07 22:27:34,746 - octoprint.plugins.preprintservice - WARNING - \"Connection to Octoprint server on http://192.168.48.43:5000 couldn't be established\"        If you see instead the following, please check the APIKEY: (403 - forbidden)     2019-04-07 22:30:09,570 - octoprint.plugins.preprintservice - WARNING - Connection to Octoprint server on http://192.168.48.43:5000/api/version couldn't be established, status code 403        If the the PrePrint Server can’t be reached, you will see this:     2019-04-07 22:27:34,746 - octoprint.plugins.preprintservice - WARNING - Connection to PrePrint Server on http://192.168.48.81:2304/asdf couldn't be established        Make also sure that your selected profile file is correct.  If you have any troubles in setting this plugin up or tips to improve this instruction, please let me know!PrePrint-Service APIYou can use this API to preprocess your models for 3D printing.import requestsurl = \"http://localhost:2304/tweak\"model_path = 'preprintservice_src/uploads/model.stl'profile_path = 'preprintservice_src/profiles/profile_015mm_brim.profile'output_path = 'gcode_name.gcode'# Auto-rotate file without slicingr = requests.post(url, files={'model': open(model_path, 'rb')},                  data={\"tweak_actions\": \"tweak\"})# Only slice the model to a gcoder = requests.post(url, files={'model': open(model_path, 'rb'),                              'profile': open(profile_path, 'rb')},                data={\"machinecode_name\": output_path,                        \"tweak_actions\": \"slice\"})# Auto-rotate and slice the model filer = requests.post(url, files={'model': open(model_path, 'rb'), 'profile': open(profile_path, 'rb')},                  data={\"machinecode_name\": output_path, \"tweak_actions\": \"tweak slice\"})print(r.status_code)object = r.textThe resulting object, either a tweaked stl file or a gcode file isaccessible via r.text which can be some MB large.Information of how to interact with Octoprint’s API is depicted here.For example, you can test the file upload API like this:import jsonimport requests# Octoprint's URL using the default port 5000 and the API including the API-keyurl = \"http://192.168.48.43:5000/api/files/local?apikey=A943AB47727A461XXXXXXXXXXXX\"model_path = 'preprintservice_src/uploads/model.stl'files = {'file': open(model_path, 'rb')}# Upload a file using Octoprint's APIr = requests.post(url=url, files=files)print(r.status_code)print(json.dumps(r.json(), indent=2))I hope this workflow for 3D print preprocessing helps you!DonationThis plugin, as well as the auto-rotation module Tweaker-3 was developed in my spare time.If you like it, I would be thankful about a cup of coffee :)Happy Printing!",
"tags": ["slic3r","slicing","gcode","stl","tweak","auto-rotate","orientation"]
},

{
"id": "/plugins/octopod",
"url": "/plugins/octopod/",
"date": "2019-05-28 00:00:00 -0500",
"title": "OctoPrint-OctoPod",
"description": "OctoPrint plugin for OctoPod",
"author": "Gaston Dombiak",
"content": "This plugin sends immediate push notifications to your iOS devices when:  Print finished (includes camera snapshot)  Bed warmed up to target temp for a period of time. Helps get smooth first layers  Bed cooled down below specified threshold. Ideal to easily remove prints from bed  Extruder cooled down below specified threshold. Ideal to know when to turn printer off  Printer paused for user. This may happen when running out of filament or when doing manual multi color printing (M600)  Palette 2 / Pro encountered a problem while printing  MMU requires user assistance (requires Prusa firmware)  Firmware errors. Get security alerts like thermal runaway, probing failed, min temp error, max temp error, etc.If you are using the free and open source OctoPodto control your printer from any iOS device then this plugin is a great addition. If younever heard of OctoPodbefore then you are in for a treat. Here are some of its features: multiple printers support,multiple cameras support including full screen with zoom in/out, control your printer usingSiri or from your Apple Watch, temperature charts including temp variance. You can cancel any objectbeing printed since it has support for Cancel object plugin.But that is not the only supported plugin, here are other supported plugins: TPLink,PSU Control, Domoticz,Belkin Wemo, Tasmota andCustom Control . And now with this newOctoPrint plugin we added real time notifications for some very useful features.InstallationInstallation is super easy. There is no need to change your router configuration, doport forwarding or open holes in your firewall. Just follow these steps and you willbe up and running in no time.  Download and install this plugin as you would do with any other OctoPrint plugin  Download OctoPod from the App Store  Start OctoPod soit can receive notifications. This step is required for testing the plugin  Go to OctoPrint settings and configure this plugin          If needed, update Snapshot URL to point to the camera that will provide an image when your print is finished      Click on Send test notification to confirm setup is operational      Configure Bed Notifications to receive cooled down or warm up bed events      Save settings and enjoy      ",
"tags": ["octopod","bed temperature","print finished","iOS","notifications","mmu"]
},

{
"id": "/plugins/uploadanything",
"url": "/plugins/uploadanything/",
"date": "2019-05-28 00:00:00 -0500",
"title": "Upload Anything",
"description": "Allows custom file types to be uploaded via the web interface",
"author": "Roberto Lo Giacco",
"content": "If you want to keep your files organized storing project files and models along the sliced GCODE as I do then this plugin will allow you to overcome the default constraint allowing to upload only GCODE files via the file embedded file upload mechanism.By default this plugin adds the following file extensions:  STL  OBJ  3MF  JPG  GIF  PNGYou can add or remove from the above list at your liking via the dedicated plugin settings.",
"tags": ["file upload","upload"]
},

{
"id": "/plugins/Change_Filament",
"url": "/plugins/Change_Filament/",
"date": "2019-05-29 00:00:00 -0500",
"title": "Change_Filament",
"description": "Facilitates changing filament (backs out old, loads new)",
"author": "Jim Pingle",
"content": "This plugin makes it simple to change filament.The plugin mimics the actions taken by the change filament action built intoMarlin. That feature is not available on all printers and also requires usingthe control box to use, instead of doing everything in OctoPrint.Configuration:  Unload Length: Length of filament to reverse extrude when unloading, in mm.  Unload Speed: How fast to unload the filament, in mm/m.  Load Length: Length of filament to extrude when loading, in mm.  Load Speed: How fast to extrude when loading filament, in mm/m.  Y Park: Position on the Y axis where the head will be moved when loading or unloading.  X Park: Position on the X axis where the head will be moved when loading or unloading. Depending on the filament path, may be best set to the midpoint of the X axis.  Z Lift Relative: How high to move the Z axis before unloading, in mm.  Park Speed: How fast to move the head when parking, in mm/m.",
"tags": ["filament"]
},

{
"id": "/plugins/OctoFlat",
"url": "/plugins/OctoFlat/",
"date": "2019-06-03 00:00:00 -0500",
"title": "OctoPrint-OctoFlat",
"description": "A flat theme for OctoPrint.",
"author": "Joseph Geis",
"content": "A nice, sleek OctoPrint theme to get rid of the ugly gradients. It is simply dropped in with no configuration necessary.",
"tags": ["theme","ui","tweak"]
},

{
"id": "/plugins/filamentencore",
"url": "/plugins/filamentencore/",
"date": "2019-06-03 00:00:00 -0500",
"title": "Filament Sensor Encore",
"description": "OctoPrint plug-in that detects when printer is out of filament",
"author": "Dragos Costache",
"content": "Pause printing when the 3D printer runs out of filament.Based on the Filament Sensor Reloaded plugin by kontakt, this plugin adds new features such as the ability to prevent print starting/resuming when no filament detected and offers bug fixes.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/PrinterAlerts",
"url": "/plugins/PrinterAlerts/",
"date": "2019-06-08 00:00:00 -0500",
"title": "OctoPrint-PrinterAlerts",
"description": "Alert the user when their printer is waiting for interaction.",
"author": "Patrick Leiser",
"content": "PrinterAlertsThis plugin detects echo:busy: paused for user messages from the printer and uses OctoPrint’s built in alert system to notify the user that the printer needs their attention.This is especially useful for Prusa’s printers with MultiMaterial Units installed, as the printer prompts you to select the filament to use on the LCD when printing in Single Material Mode.ScreenshotsFeatures  Will bring up a standard alert in octoprint when the printer is waiting for your input.  Configurable alert severity, from “Error” and “Warning”, to “Info”, and “Sucess”  Set alerts to auto-hide, or to stay on screen  Note: For printer like the Prusas that repeatedly give the same message while waiting, I strongly recommend leaving this set to Auto Close.  Optionally can speak the alerts as well (not supported in all browsers)Compatibility  This plugin was designed to work with the Prusa i3 Mk3s MMU2 3D printer, and will likely work with other Prusa printers as well.  It will work with any non-prusa printers that output the same messageecho:busy: paused for user when waiting for user input  For other printers that have a different waiting for user message, create an issue on github, and I’ll be happy to try to implement it for those messages as well  this plugin might not work with files on the SD card. (Untested)",
"tags": ["printer","alert","waiting","notification","multimaterial"]
},

{
"id": "/plugins/PauseForUserEvent",
"url": "/plugins/PauseForUserEvent/",
"date": "2019-06-11 00:00:00 -0500",
"title": "PauseForUser Event",
"description": "Adds a new event 'paused_for_user' when the printer needs manual intervention",
"author": "Thomas Arthofer",
"content": "When echo:busy: paused for user is received on the serial port, this plugin then raises a paused_for_user event, which may then be used with other plugins like OctoPrint-MQTT to alert the user, that the printer needs attention.The primary use for this is the Prusa MMU2S, which when it fails to load/unload filament, will halt the printer and send this message on serial.See the plugin’s README for details.",
"tags": ["paused for user","Prusa MMU2","notification","event"]
},

{
"id": "/plugins/prusaetaoverride",
"url": "/plugins/prusaetaoverride/",
"date": "2019-08-25 00:00:00 -0500",
"title": "Prusa (M73 response) ETA Override",
"description": "Plugin that overrides OctoPrint ETA to values from last M73 gcode response received from printer",
"author": "Anton Skorochod",
"content": "AboutThe last Sli3cr Prusa Edition implemented M73 gcode injecting to the generated gcodes. This M73 sends “NORMAL MODE: Percent done: 0; print time remaining in mins: 3” to serial with perfect time estimation. This plugin overrides ETA to this value.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["progress","eta","estimation","m73"]
},

{
"id": "/plugins/webcamSB",
"url": "/plugins/webcamSB/",
"date": "2019-09-04 00:00:00 -0500",
"title": "OctoPrint-Webcamsb",
"description": "Sidebar webcam viewer",
"author": "Luis Magar Brunner",
"content": "This plugin adds a webcam stream viewer to the sidebar of Octoprint so you can keep an eye on your print at any moment.You can click on the viewer to maximize the view.You can flip the image in the configuration (even if left blank to use the default stream).You can configure up to four streams (IP cam recommended when using multiple streams).",
"tags": ["webcam","sidebar","stream"]
},

{
"id": "/plugins/gslc",
"url": "/plugins/gslc/",
"date": "2019-09-05 00:00:00 -0500",
"title": "GcodeSuperLaserController",
"description": "A plugin for Laser engraving add",
"author": "Skiepp",
"content": "GCodeSuperLaserControllerThis is a basic plugin to work with a Laser Engraver.Printing from the OctoPrint interface with this plugin can turn your 3D printer into a laser engraver!Commands  M3 &lt;p&gt;:  Turns ON the laser with power &lt;p&gt;  M4 &lt;p&gt;:  Turns ON the laser with power 255-&lt;p&gt;  M5:  Turn OFF the laserThe laser power can go from 1 (min) to 255 (MAX)NOTE: It’s highly suggested to add an M400 - Finish Moves before the M3, M4 and M5 commands.How to UseStep 0) Install the pluginStep 1) Connect the Laser driver to pins GPIO18 and GNDStep 2) Create a GCode using the described commandsStep 3) Print using OctoprintHave fun :)Oh, almost forgot, I’m not responsible for you hurting yourself with your cool laser, but please use it with caution.",
"tags": ["gcode","laser","engraver","marlin"]
},

{
"id": "/plugins/dashboard",
"url": "/plugins/dashboard/",
"date": "2019-09-10 00:00:00 -0500",
"title": "OctoPrint-Dashboard",
"description": "A dashboard tab for Octoprint",
"author": "Stefan Cohen",
"content": "This plugin adds a  dashboard tab in Octoprint that displays the most relevant info regarding the state of the printer and any on-going print job.Features  Shows stats for:          Printer profile, Connection status, Printer Status      Hotend temp(s), Bed Temp, Chamber Temp, Fan speed      Printed file, Progress      Estimated total time, Elapsed time, Estimated time left      Current layer, Total layers      Current height, Total height      Average layer time        Supports multiple hotends as configured in the printer profile  Supports chamber temperature if configured in the printer profile  Configurable progress gauge type (Circle, Bar)  Uses Estimates from PrintTimeGenius when installed  Uses GCode analysis provided by DisplayLayerProgress to get more accurate layer and fan data  Theme friendly:For installation and configuration details, please visit the dashboard github page",
"tags": ["dashboard","status","overview","progress"]
},

{
"id": "/plugins/octovox",
"url": "/plugins/octovox/",
"date": "2019-09-11 00:00:00 -0500",
"title": "OctoPrint-OctoVox",
"description": "OctoPrint plugin for OctoVox Amazon Alexa Integration",
"author": "John Ruzick",
"content": "The OctoVox plugin for OctoPrint sends limited printer information to a database for access via Amazon Echo devices. The problem with other Alexa solutions is that they require exposing access to your Octoprint server over the public internet as well as require providing the external service with your Octoprint API key.The OctoVox plugin eliminates that security risk by publishing only small informational status updates about your printer that can then be retrieved by the Octovox Amazon Alexa Skill. This plugin and Alexa Skill do not allow any manipulation orcontrol over your printer, it is entirely read-only and secured via user accounts.OctoVox Plugin Installation and ConfigurationInstallation is super easy. There is no need to change your router configuration, doport forwarding or open holes in your firewall.  Download and install this plugin from the OctoPrint Plugin Repository or Github URL  Open the Settings tab of the OctoPrint-OctoVox Plugin  Enter a desired name for your printer  Click the Request Printer Registration button  You will be redirected to the OctoVox Login Page. If you do not yet have an account, click “Sign-Up” and enter a valid email address and create a password. You will have to verify your email address and then you will be directed to a page that will provide a unique key for your printer.  Enter that unique key in the box for Step 3 on the OctoVox Settings Page.  Click the Verify Registration button to make sure things were configured correctly.  After the info is verified, click Save.Alexa Setup  Use the Alexa companion mobile app or website to find and enable the Octovox Skill.  Once enabled, click on Settings and select Link Account.  Enter the Username and Password created in step 4 of the Plugin Configuration.  You can now ask Alexa for your printer status by saying “Alexa, ask my 3-D print server for my printer status”Setup Walkthrough\tPrivacyThis plugin uses two external services to function. A user management and registration portal, and an API/Database to store printer information. Upon successful configuration, your OctoPrint server will occasionally publish updates to the service via the API. These updates are securedusing your unique printer API key. This is NOT your OctoPrint API key! At no point will you need to provide your OctoPrint API key or Url, andyou do not need to expose your server to the public.Currently, the OctoVox service stores the following information which can be retrieved by Alexa:  Registration Email Address  Printer Name  Encrypted Printer Key Value  Printer Status (Offline, Operational, Printing, etc.)  Hot End Temperature  Bed Temperature  Current Job Completion Percentage  Current Job Z-height  Current Filename  Previous Job Duration  Previous Job Result (Completed, Cancelled, Failed, etc.)Printers that have not updated their status in 10 days will automatically be removed from the database and will have to be re-registered",
"tags": ["octovox","Amazon Echo","Alexa","Printer Status","Printer Temperature"]
},

{
"id": "/plugins/AutostartPrint",
"url": "/plugins/AutostartPrint/",
"date": "2019-09-23 00:00:00 -0500",
"title": "AutostartPrint",
"description": "Autostart a print job after conneting.",
"author": "Olli",
"content": "The Plugin starts a print job after the Printer is connected (e.g. after powering up). It selects the newest uploaded file for print.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)For implementation details please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/AutoLogout",
"url": "/plugins/AutoLogout/",
"date": "2019-10-03 00:00:00 -0500",
"title": "AutoLogout",
"description": "Plugin starts a countdown timer after login and if the timer is count to zero, the user is automatically logged out.",
"author": "Olli",
"content": "Plugin starts a countdown timer after login and if the timer is count to zero, the user is automatically logged out.The timer is restarted each time a user clicks on “something” like a tab-change.For implementation details please visit the homepage.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["printer"]
},

{
"id": "/plugins/metadatapreprocessor",
"url": "/plugins/metadatapreprocessor/",
"date": "2019-10-03 00:00:00 -0500",
"title": "MetadataPreprocessor",
"description": "Plugin to speed up the gcode analysis in OctoPrint",
"author": "Sven Lohrmann",
"content": "This OctoPrint plugin uses a generated metadata comment in the gcode file to speed up the analyzing process on systems with limited resources like the Raspberry PI.As an example: Analyzing a 7MB gcode file on my Raspberry PI B+ took ~17min. With included metadata only 2s while generating the metadata itself took additional 8s on my laptop.How it worksThe separate analysis script uses OctoPrint’s gcode interpreter to analyze the given gcode file. After the analysis has finished the metadata is written to the beginning of the file.If the gcode is uploaded the plugin stops the gcode analysis started by OctoPrint and looks whether the file contains such metadata or not. If metadata is found it will be added to the .metadata.yaml and the METADATA_ANALYSIS_FINISHED event will be fired. Otherwise the file will be analyzed by OctoPrint as usual by adding it to the analysis queue again.Installation of the analysis scriptGuides for Linux and Windows can be found in the wiki.",
"tags": ["gcode","metadata"]
},

{
"id": "/plugins/orvibos20",
"url": "/plugins/orvibos20/",
"date": "2019-10-03 00:00:00 -0500",
"title": "OctoPrint-OrviboS20",
"description": "Plugin to control Orvibo S20 Smart Plug from the OctoPrint web interface.",
"author": "cprasmu",
"content": "Orvibo S20Work inspired by OctoPrint TP-Link WiFi SmartPlug and Orvibo, this plugin controls an Orvibo S20 smart-plug via OctoPrint’s nav bar.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Orvibo S20.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.133 your gcode command would be M80 192.168.1.133        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      ",
"tags": ["Orvibo","S20","Smartplug","Power"]
},

{
"id": "/plugins/mmu2filamentselect",
"url": "/plugins/mmu2filamentselect/",
"date": "2019-10-04 00:00:00 -0500",
"title": "OctoPrint-Mmu2filamentselect",
"description": "Select the filament for Prusa MMU2 when printing in single mode.",
"author": "Florian Schütte",
"content": "This plugin shows a dialog to select the filament when a print on a Prusa printer with MMU2 is startet in single mode.The dialog is shown, when the plugin detects a ‘Tx’ command in the gcode.So you don’t have to go to your printer and select the filament to be used. It can now be done from within Octoprint.A timeout can be set in the settings (default 30 seconds), after which the dialog is closed. When this happens you have to select the filament on the printer as usual.",
"tags": ["prusa","mmu2","gcode","prusa mmu2","filament","notification"]
},

{
"id": "/plugins/filamentstorage",
"url": "/plugins/filamentstorage/",
"date": "2019-10-25 00:00:00 -0500",
"title": "OctoPrint-Filamentstorage",
"description": "Plugin for OpenSource Filament Storage Containers that report Temp, Humidity, and scale values over USB.",
"author": "Walt Moorhouse",
"content": "Connects to any Filament Storage Box supporting the below serial communications:1) sends periodic updates in the following format:     H:xx.xx% T:xx.xxC S1:x.xxkg S2:x.xxkg S3:x.xxkg S4:x.xxkg P:[ON|OFF]1) accepts the following commands:    1) SET H=xx (sets maxHumidity to xx)    1) SET T=xx (sets maxTemperature to xx)    1) TARE y (Tares scale y, 0&lt;y&lt;5)",
"tags": ["filament","usb"]
},

{
"id": "/plugins/CrealityTemperature",
"url": "/plugins/CrealityTemperature/",
"date": "2019-10-28 00:00:00 -0500",
"title": "Creality Temperature Fix",
"description": "Fix to parse correctly temperatures from Creality printer",
"author": "Romain Odeval, Jean-Christophe Heger",
"content": "Fix to parse correctly temperatures from Creality printers.Originally created by Jean-Christophe Heger on https://community.octoprint.org/t/temperature-info-not-parsed-correctly/3557/12Tested on :  CR-10S Pro  CR-X",
"tags": ["creality","temperature"]
},

{
"id": "/plugins/thingiverse",
"url": "/plugins/thingiverse/",
"date": "2019-10-28 00:00:00 -0500",
"title": "OctoPrint-Thingiverse",
"description": "This plugin creates a new tab where Thingiverse website is embedded.",
"author": "stefancandrea",
"content": "OctoPrint-ThingiverseThis plugin adds the ability to browse Thingiverse website from OctoPrint. A lot of people use Thingiverse website for their 3D model portfolio, but they need to change windows all the time (ALT+TAB).No more!Now you can search 3D models inside your OctoPrint environment.Tip:If you have Slic3r or Cura engine plugin, all you need is your OctoPrint. No browser, no external slicing engines.Search the model &gt; Download  &gt; Open zip file &gt; Drag&amp;Drop .stl file &gt; Print!.Here is a YouTube Video that can help you install the latest Slic3r slicer including 3d representation of the model.ScreenshotsInstallInstall via the bundled Plugin Manager or manually using this URL:            https://github.com/stefancandrea/OctoPrint-Thingiverse/archive/master.zip   SetupOnce installed go into OctoPrint Settings &gt; Thingiverse where you can enable/disable this function and follow a small guide for a cleaner and ergonomic view of the website.DisclaimerThis plugin adds a tab to the OctoPrint interface that loads the Thingiverse website within an iframe.The Thingiverse website is copyright, trademark, and owned by MakerBot Industries, LLC, see their T&amp;C for additional information regarding the use of their website and service(s).The author of this plugin is not responsible for any malicious action regarding MakerBot Industries, LLC property.Support the effortIf you found this plugin useful you can support it’s creator. Thank you.",
"tags": ["Thingiverse","embedded website"]
},

{
"id": "/plugins/influxdb",
"url": "/plugins/influxdb/",
"date": "2019-11-02 00:00:00 -0500",
"title": "OctoPrint-InfluxDB",
"description": "Writes temperatures and events to an Influx database.",
"author": "Aaron Griffith",
"content": "An InfluxDB data gathering plugin forOctoPrint. Track your printer’s progress and temperature in InfluxDB!See the plugin settings page to set InfluxDB server, target database,field prefix, and poll interval.",
"tags": ["data","events"]
},

{
"id": "/plugins/thespaghettidetective",
"url": "/plugins/thespaghettidetective/",
"date": "2019-11-07 00:00:00 -0600",
"title": "The Spaghetti Detective",
"description": "An essential plugin if you print remotely. Monitor and control your printer over the internet. No port-forwarding or VPN is needed. Best part? AI-based failure detection!",
"author": "The Spaghetti Detective Team",
"content": "Can’t sleep well whenever your 3D printer is printing at night? Always worried that your print may fail when you are not home?The Spaghetti Detective constantly watches your prints when you are not. It uses AI (Deep Learning) to analyze webcam images in the background and alerts you when your print shows the signs of failing.It also comes with a host of other features so that you can print remotely with a peace of mind even when you are not home.      Remote webcam access. No port-forwarding or VPN required.        Remote control of your printer. Pause or cancel print at any time. Check and set heater temperatures or turn them off.        Easy share of your webcam streaming or time-lapses with your friend (ETA Dec. 2019).  \tSounds cool! But does this AI thing really work?The Spaghetti Detective is still at early stage so it doesn’t always get it right. But many beta testers have already written to us and told us “hey it worked!”. Here are a few time-lapses from our users:\tFrom beta tester Torsten\tFrom beta tester LilaIf you can’t have enough spaghetti (pun intended), head to our Spaghetti Gallery for more time-lapses.How about webcam streaming?Glad that you asked! The Spaghetti Detective has a shiny new feature - webcam streaming in 25 frames per second (Pro subscriber only)! Check out this video and be amazed about how smooth the webcam streaming is!\tInstall and setupSetting up The Spaghetti Detective is quite straightforward. Just install this plugin and follow the steps on the wizard screen and you will be all set.If you run into any difficulties, check out the Setup Guide.Does it cost anything?Yes and No.  First and foremost, The Spaghetti Detective is an open source project. You can always grab the code and run the server yourself.  If you want to skip the hassle and risk of setting up the server and exposing it to internet, you can use The Spaghetti Detective cloud. You can have a free account with limited service, or upgrade to a paid account for a couple coffees a month if you want unrestricted access and features. Check out the pricing.Questions? Comments? Run into problems? Reach out to us.Support us by liking us or following us on social media:    ",
"tags": ["remote","monitor","monitoring","webcam","AI","Machine Learning","phone","control","port forwarding","internet"]
},

{
"id": "/plugins/UltimakerFormatPackage",
"url": "/plugins/UltimakerFormatPackage/",
"date": "2019-11-16 00:00:00 -0600",
"title": "Ultimaker Format Package",
"description": "This plugin adds support for Ultimaker Format Package (.ufp) files.",
"author": "jneilliii",
"content": "OctoPrint-UltimakerFormatPackageThis plugin adds support for Ultimaker Format Package (.ufp) files. Ultimaker Format Package files are based on Open Packaging Conventions (OPC) and contain compressed gcode and a preview thumbnail. This format will automatically be used by the OctoPrint Connection plugin in Cura (install via Marketplace) if this plugin is installed.The preview thumbnail can be shown in OctoPrint from the files list by clicking the newly added image button.The thumbnail will open in a modal window.If enabled in settings the thumbnail can also be embedded as an inline thumbnail within the file list itself. If you use this option it’s highly recommended to use Themify to make the file list taller and/or adjust the thumbnail’s size.  The image selector for this in Themeify should be div.row-fluid.inline_thumbnail &gt; img but I haven’t yet tested personally.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Ultimaker Format Package","ufp","Cura"]
},

{
"id": "/plugins/filamentrevolutions",
"url": "/plugins/filamentrevolutions/",
"date": "2019-11-29 00:00:00 -0600",
"title": "Filament Sensor Revolutions",
"description": "Use 1 or 2 filament sensors to pause printing or send GCode commands when filament runs out or is jammed.",
"author": "RomRider",
"content": "OctoPrint plugin that integrates with 1 or 2 filament sensors hooked up to a Raspberry Pi GPIO pin and allows the filament spool to be changed during a print if the filament runs out or is jammed.You can pause or send GCode commands when a sensor is tripped. Behaviours can be different between the runout sensor and the jam sensor.An API is available to check the filament sensors status via a GET method:  to /plugin/filamentrevolutions/filament for the filament sensor      to /plugin/filamentrevolutions/jammed for the jam sensor    {status: \"-1\"} if the sensor is not setup  {status: \"0\"} if the sensor is OFF (filament not present/filament not jammed)  {status: \"1\"} if the sensor is ON (filament present/filament jammed)Here’s the settings page:Initial work based on the Octoprint-Filament-Reloaded plugin by kontakt.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/mystromswitch",
"url": "/plugins/mystromswitch/",
"date": "2019-12-03 00:00:00 -0600",
"title": "OctoPrint-MyStromSwitch",
"description": "Plugin to integrate myStrom Switch into your OctoPrint installation",
"author": "David Zingg",
"content": "Plugin to integrate myStrom Switch into your OctoPrint installation",
"tags": ["MyStrom","Switch","Relay"]
},

{
"id": "/plugins/resource_monitor",
"url": "/plugins/resource_monitor/",
"date": "2019-12-03 00:00:00 -0600",
"title": "Resource Monitor",
"description": "A plugin to view the current CPU, RAM, disk and network usage on your system",
"author": "Renaud Gaspard",
"content": "This plugin adds a neat tab containing various information and graphs about your system resource usage.It displays information about your CPU, memory, disks and network usage.",
"tags": ["resource","monitor","memory","disk","network","cpu","processor","usage"]
},

{
"id": "/plugins/prometheus_exporter",
"url": "/plugins/prometheus_exporter/",
"date": "2019-12-09 00:00:00 -0600",
"title": "Prometheus Exporter",
"description": "A plugin for prometheus compatible metrics endpoint",
"author": "Gergo Torcsvari",
"content": "This is a utility plugin, which enables the prometheus server to scrape metrics from your octoprint instance.Later on, you can use data vizualisation tools (for example grafana) to track and visualize your printer(s) status(es).This plugin has no visible UI!Currently exported metrics:  python version - as info  octoprint version, hostname, os - as info  actual temperature - as gauge with tool identifier label  target temperature - as gauge with tool identifier label  client number - as gauge; the actually connected clients to the host  printer state - as info  started prints - as counter  failed prints - as counter  done prints - as counter  cancelled prints - as counter  timelaps count - as counter  print progress - as gauge with path label  slice progress - as gauge with path labelAll of the metrics are prefixed as octoprint_ for easier identification.The metrics endpoint is: http://localhost:5000/plugin/prometheus_exporter/metrics (change the host+port to your actual host+port)Example scrape config (or check it from the project repo):- job_name: 'octoprint'    scrape_interval: 5s    metrics_path: '/plugin/prometheus_exporter/metrics'    static_configs:      - targets: ['octoprint:80']",
"tags": ["prometheus","grafana","monitor","monitoring","usage","status"]
},

{
"id": "/plugins/PrusaLevelingGuide",
"url": "/plugins/PrusaLevelingGuide/",
"date": "2019-12-18 00:00:00 -0600",
"title": "Prusa Leveling Guide",
"description": "Plugin that helps walk you through adjusting the Prusa MK3 heatbed using the nylock mod",
"author": "Scott Rini",
"content": "AboutStart hereBed Leveling without Wave SpringsThis plugin is to help guide you through the fine adjustments of the nylock bed leveling method for Prusa MK3 printers, which is described in the above guide.  Make sure you start there and already have the nylocks applied to your bed before beginning.  This plugin allows you to select a profile for preheating, then begin adjustment.  For each round of adjustment, the plugin will send the configured mesh level code and gcode for retrieving values (generally G80; G81).  Once values are received, you can view how to adjust your bed in a number of ways.  You click continue to proceed with another round of leveling or click finish to finish up.You have the option of viewing the values in a table view or overlayed on a photo of the heatbed.  You can also customize whether you view raw values, degrees, decimal turns, or factional turns.",
"tags": ["prusa","bed level","mesh","nylock"]
},

{
"id": "/plugins/octohue",
"url": "/plugins/octohue/",
"date": "2020-01-31 00:00:00 -0600",
"title": "OctoHue",
"description": "Hue lighting control for Octoprint - Illuminate your printer and signal its status using Phillips Hue lights",
"author": "Simon Beckett",
"content": "OctoPrint-OctoHueIlluminate your print job and signal its status using a Philips Hue light.Features  Light on and off in coordination with the connection between Octoprint and your printer  Configure “Connected” light colour using colour picker or HTML hex colour codes  Customisable default brightness  Available Customisable Statuses:          Connected -  Default White      Print Finished - Default Green      Error - Default Red      See the TODO list at the end of this page for features on the roadmapSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/entrippy/OctoPrint-OctoHue/archive/master.zipHue Bridge ConfigurationOctohue requires 3 settings to function  The IP Address of you Hue Bridge  A User for octoprint to use when contacting your bridge  The numberic ID of your Hue light.Steps to find or configure these can be found in How to Develop for Hue - Getting StartedConfigurationOnce you have the Hue IP, Username, and Light ID, enter these into the appropriate field in Octohues menu in settings.TODO  Make all available statuses customisable  Per status brightness  LightID Discovery",
"tags": ["Philips Hue","Hue","Lights","Status","Automation"]
},

{
"id": "/plugins/progress_title",
"url": "/plugins/progress_title/",
"date": "2020-01-31 00:00:00 -0600",
"title": "Progress Title",
"description": "Show progress percentage in document title",
"author": "pwnbus",
"content": "A simple plugin that adds the completed print percentage in the web page title.",
"tags": ["progress","title"]
},

{
"id": "/plugins/terminalcommandsextended",
"url": "/plugins/terminalcommandsextended/",
"date": "2020-02-07 00:00:00 -0600",
"title": "Terminal Commands Extended",
"description": "Plugin that adds custom gcode command buttons to the Terminal tab.",
"author": "jneilliii",
"content": "Terminal Commands ExtendedThis plugin adds additional command buttons to the Terminal tab of OctoPrint.ConfigurationAdd buttons in settings. Use drop-down on added button to choose the icon and click added button to configure specific options for that button, including the command to run and optional paramaters.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["terminal tab","gcode","commands"]
},

{
"id": "/plugins/OctoPrint-hueCommands",
"url": "/plugins/OctoPrint-hueCommands/",
"date": "2020-03-18 00:00:00 -0500",
"title": "Add GCODE like HUE commands to OctoPrint",
"description": "Illuminate your print job and signal its status using a Philips Hue light. Enter a GCODE equivalent anywhere you want.",
"author": "LMS0815",
"content": "",
"tags": ["hue","gcode","automation","lights","philips hue","status","philips","gcode"]
},

{
"id": "/plugins/remove_ttys_ports",
"url": "/plugins/remove_ttys_ports/",
"date": "2020-03-23 00:00:00 -0500",
"title": "Remove /dev/ttyS* Ports (port auto detection fix)",
"description": "Removes any matched /dev/ttyS* ports from the serial port list again and thus works around autodetection issues with 1.4.0 on systems with such ports",
"author": "Gina Häußge",
"content": "This plugin patches the internal method inside OctoPrint that creates a list of the serial ports in your system tofilter out /dev/ttyS* entries, which were added to the default port pattern in OctoPrint 1.4.0.Install this plugin if you are running into issues with port auto detection no longer working on your instance whichworked flawlessly on earlier versions, especially if you have a Raspberry Pi camera or a touch screen installed (which appear to add a /dev/ttyS port to the system at least in some cases).This is a work around for OctoPrint 1.4.0 until a generally better port auto detection solution can be released with1.4.1, and thus currently only works with OctoPrint 1.4.0.",
"tags": ["workaround","fix","auto detection","autodetection","serial port","port"]
},

{
"id": "/plugins/fixcbdfirmware",
"url": "/plugins/fixcbdfirmware/",
"date": "2020-03-25 00:00:00 -0500",
"title": "Fix CBD Firmware",
"description": "Fixes communication with a broken firmware making its rounds that identifies as \"CBD make it\"",
"author": "Gina Häußge",
"content": "This plugin works around issues with a firmware that identifies itself only with the string CBD make it in responseto M115 - hence the name “CBD Firmware” due to a lack of alternatives - and which wrongly implements some parts ofthe established communication protocol, causing severe issues when trying to communicate and print with it fromOctoPrint.You can read more about this firmware and what printers are currently known to ship with itin this FAQ entry.Installing this plugin should make any printers shipped with this broken firmware work with OctoPrint.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/OctoPrint/OctoPrint-Fix-CBD-Firmware/archive/master.zip",
"tags": ["workaround","communication","firmware","broken firmware","anycubic","xinkebot","qidi tech","tronxy","cbd","zwlf"]
},

{
"id": "/plugins/Plabric",
"url": "/plugins/Plabric/",
"date": "2020-03-26 00:00:00 -0500",
"title": "Plabric",
"description": "Manage and control your 3D printer anywhere without port forwarding or VPN.",
"author": "Plabric",
"content": "PlabricManage and control your 3D printer anywhere without port forwarding or VPN.Plabric plugin allows you to link your 3D printer with Plabric app (currently available for Android, iOS not yet available). Discover all features on https://plabric.comFor the moment, video stream is only available on x86_64 and armv7l (Raspberry) linux systems.How to installCheck our tutorial: Install PlabricOr install via the bundled Plugin Manageror manually using this URL: https://github.com/plabric/Octoprint-Plabric/archive/master.zipOnce the plugin is installed, follow the steps provided by te plugin for connect with your Plabric account.You can find the steps accessing to plugin options:    Click settings icon on Octoprint navigation bar.    On the left scrollable panel, search Plabric menu option and click it.    Follow the instructions provided.SupportDo you have any question or problem installing the plugin? Contact us at contact@plabric.com",
"tags": ["control","manage","remote","webcam stream","phone","cloud printing","remote access"]
},

{
"id": "/plugins/Python3PluginCompatibilityCheck",
"url": "/plugins/Python3PluginCompatibilityCheck/",
"date": "2020-03-31 00:00:00 -0500",
"title": "Python 3 Check",
"description": "Checks installed plugins for Python 3 compatibility based on their entry in Plugin Repository.",
"author": "jneilliii",
"content": "Python 3 CheckThis plugin simply adds a section in settings that allows you to check your installed plugins against the OctoPrint Plugin Repository list to see which ones are not yet Python 3 compatible.Checking CompatibilityAfter installing, open OctoPrint’s settings and click Python 3 Check in the plugins section. Press the Check Compatibility button and a list of links to the plugin’s homepages will be generated. Click the link and open a new issue in the plugin’s repository requesting for Python 3 compatibility.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": []
},

{
"id": "/plugins/AutoTerminalInput",
"url": "/plugins/AutoTerminalInput/",
"date": "2020-04-01 00:00:00 -0500",
"title": "Auto Terminal Input",
"description": "Automatically focuses the command input when switching to the Terminal tab in OctoPrint.",
"author": "jneilliii",
"content": "OctoPrint-AutoTerminalInputSimple plugin that will automatically activate the command input field when switching to the Terminal tab of OctoPrint.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["terminal"]
},

{
"id": "/plugins/prusaslicerthumbnails",
"url": "/plugins/prusaslicerthumbnails/",
"date": "2020-04-22 00:00:00 -0500",
"title": "PrusaSlicer Thumbnails",
"description": "Extracts embedded thumbnails from PrusaSlicer gcode files.",
"author": "jneilliii",
"content": "PrusaSlicer ThumbnailsThis plugin will extract the embedded thumbnails from PrusaSlicer gcode files where the printer’s profile ini file has the thumbnail option configured. This is default behavior for the Prusa Mini printer profile.The thumbnail image extracted will always be the last resolution provided in the thumbnail setting. So for example the Prusa Mini setting is thumbnails = 16x16,220x124 so the thumbnail that will be extracted will be 220x124 pixels as seen in the screenshots below. See the Configuration section below for additional details.The preview thumbnail can be shown in OctoPrint from the files list by clicking the newly added image button.The thumbnail will open in a modal window.If enabled in settings the thumbnail can also be embedded as an inline thumbnail within the file list itself. If you use this option it’s highly recommended to use Themeify to make the file list taller and/or adjust the thumbnail’s size.            Selector      CSS_Rule      Value                  #files &gt; div &gt; div.gcode_files &gt; div.scroll-wrapper      min-height      800px !important      ConfigurationSince PrusaSlicer only enables thumbnails by default for the Prusa Mini you may need to manually update your configuration files. Those can be found by selecting Show Configuration Folder from the Help menu of the application and then inside the printers sub-folder you’ll find your printer profiles.Note: If you don’t see your printer’s ini file in the printers sub-folder; you are probably using one of the bundled Prusa Printer profiles (ie MK3S). If so you may need to create a copy of this printer profile to be able to have an ini file to edit. To do this in PrusaSlicer go to the Printer Settings tab and Click the save button next to the printer list and give it a new name. Alternatively, push Prusa Research to update their bundled profiles to match the Mini by commenting in the issue posted on their repository here.Open your desired printer profile in your favorite text editor and find the thumbnails = section and add the resolution that you would like to include in your sliced files, and therefore visible by this plugin. For example thumbnails = 16x16,220x124 will be the equivalent of the Prusa Mini as described above.Note: Once you’ve made your changes you will need to restart PrusaSlicer in order for the changes to be used and embed the thumbnails in the exported gcode files.Warning: the higher the resolution of the thumbnail you enter in this setting the larger your gcode file will be when sliced.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip if you find this plugin helpful.No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["thumbnail","preview","PrusaSlicer"]
},

{
"id": "/plugins/filamentsensorsimplified",
"url": "/plugins/filamentsensorsimplified/",
"date": "2020-04-23 00:00:00 -0500",
"title": "Filament Sensor Simplified",
"description": "This plugin reacts to filament sensor output. If triggered it issues M600 X0 Y0 command to printer.",
"author": "Lukáš Malatinský",
"content": "DescriptionThis plugin reacts to filament sensor output. If triggered it issues M600 X0 Y0 command to printer. It is based on Octoprint-Filament-Reloaded by kontakt but the logic behind is different.This was only tested on my printer running Marlin 2.0.4.4 so sorry if any bugs present.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/luckyx182/Filament_sensor_simplified/archive/master.zipConfigurationConfiguration couldn’t be simpler, all you need is to configure listening board pin (board mode) and if the second switch terminal is connected to ground or 3.3V.Default pin is -1 (not configured) and ground (as it is safer, read below).WARNING! Never connect the switch input to 5V as it could fry the GPIO section of your Raspberry!Support meThis plugin was developed in my spare time.If you find it useful and like it, you can support me by clicking the button below :)",
"tags": ["filament","sensor","simplified","simple","trigger","runout"]
},

{
"id": "/plugins/continuousprint",
"url": "/plugins/continuousprint/",
"date": "2020-04-24 00:00:00 -0500",
"title": "Continuous Print",
"description": "Allows the queueing and automatic print and clearing of the queue",
"author": "Paul GOddard",
"content": "Continuous PrintEasy plugin to allow queuing of code files which when started will automatically print, run bed clearing commands and then print again until the end of the queue.Screenshot",
"tags": ["continuous print","queueing"]
},

{
"id": "/plugins/FriendlyNeighborhoodBeeper",
"url": "/plugins/FriendlyNeighborhoodBeeper/",
"date": "2020-04-25 00:00:00 -0500",
"title": "Friendly Neighborhood Beeper",
"description": "Beeps after completion/failure of a print, but only during the specified hours",
"author": "Alex Bahm",
"content": "This plugin is designed to be used to notify when a print is complete. While gcode to beep on print completion can easily be added to the slicer/octoprint, I wanted a way to only beep during certain time frames as I don’t want my neighbors to hate me for my printer beeping at 2 in the morning.ConfigurationActive HoursThese settings define the hours the printer may beep when the printer completes. These default to 8am - 10pm as I won’t likely be checking my printer outside those hours.Note: I don’t currently support time windows like 10pm - 8am currently.Beep SettingsIf you want to change the tone, or duration of the beep the printer makes, these can be changed to modify that.Currently, there is no ability to play multiple beeps",
"tags": ["notification","beep","print finished","simple","control"]
},

{
"id": "/plugins/TemperatureLegendMover",
"url": "/plugins/TemperatureLegendMover/",
"date": "2020-04-26 00:00:00 -0500",
"title": "TemperatureLegendMover",
"description": "Move the Temperature-Legend into a specific corner",
"author": "Olli",
"content": "For implementation details please visit the homepage.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["temperature","legend"]
},

{
"id": "/plugins/emergencystopsimplified",
"url": "/plugins/emergencystopsimplified/",
"date": "2020-04-26 00:00:00 -0500",
"title": "Emergency Stop Simplified",
"description": "This plugin reacts to a switch or button, if triggered (switch open) it issues M112 command to printer.",
"author": "Mechazawa",
"content": "DescriptionThis plugin reacts to a switch or button, if triggered (switch open) it issues M112 command to printer.Let’s check some features:  info pop-up when plugin hasn’t been configured  user-friendly and easy to configure  runs on OctoPrint 1.3.0 and higherSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/Mechazawa/Emergency_stop_simplifiedConfigurationConfiguration couldn’t be simpler, all you need is to configure listening board pin (board mode) and if the second switch terminal is connected to ground or 3.3V.Default pin is -1 (not configured) and ground (as it is safer, read below).WARNING! Never connect the switch input to 5V as it could fry the GPIO section of your Raspberry!",
"tags": ["emergency","stop","simplified","simple","trigger","button"]
},

{
"id": "/plugins/webhooks",
"url": "/plugins/webhooks/",
"date": "2020-04-29 00:00:00 -0500",
"title": "OctoPrint-Webhooks",
"description": "This allows you to send a webhook to any URL when events happen on OctoPrint.",
"author": "Blane Townsend",
"content": "This plugin was created so that my own API could receive events from OctoPrint and perform custom actions such assend a text message/push notification, log the events in a database, etc.Also, I needed a way to get notified when a color change was needed on my Prusa. So, this plugin has a custom eventthat will alert me whenever a color change is necessary. See theREADME.md for more information on how to configurethis plugin and what events are supported.",
"tags": ["webhook","api","url","events","prusa","color change","notification"]
},

{
"id": "/plugins/printoid",
"url": "/plugins/printoid/",
"date": "2020-04-30 00:00:00 -0500",
"title": "OctoPrint-Printoid",
"description": "Notifications plugin for Printoid (Android app for OctoPrint)",
"author": "Anthony Stéphan",
"content": "This is the official plugin made for the Printoid for OctoPrint application.It aims to send you push notifications to your device(s) on specific events on your OctoPrint server.This plugin has been inspired by the great plugin made by the developer of OctoPod for iOS.He plugin (the original one) can be found here.If you like the Printoid Plugin, then please support the developer of the OctoPod plugin, because he did an amazing work!The Printoid Plugin communicates with Firebase Cloud Messaging server over a Google Cloud Function, located at the following URL:https://us-central1-firebase-printoid.cloudfunctions.net/printoidPluginGatewayPrerequisitesPrintoid v15.01 (at least) should be available and installed on your phoneWhat CAN this plugin do for you?This plugin sends immediate push notifications to your Android devices runningPrintoid for OctoPrint when:  The state of your printer is changing (to PRINTING, to PAUSED, to ERROR, and back to OPERATIONAL, for example)  The print job reached a certain progress (every 10%, every 25% or at 50% only)  Your print is now complete (progress = 100%)  Your print reached specified layers (requires plugin DisplayLayerProgress plugin to be installed too)  Your heated bed reached a specific temperature (useful to know when you can easily remove your prints from the bed, or when you can get smooth first layer)  Your extruder cooled down below a specific temperature (useful to be informed when you can safely turn off your printer)  Your printer has been paused because it requires a user action (out of filament, or manual multi color printing or M600 detection)  Palette 2 / Pro encountered a problem while printing  MMU requires user assistance (it requires Prusa firmware)  Firmware errors (get security alerts like thermal runaway, probing failed, min temp error, max temp error…)This plugin does not need your phone to be connected to the same network as your OctoPrint server to send the notifications. You will be able to receive the notifications even if you are out of your home and/or connected to the cellular network (3G/4G/5G) for example.This plugin does not need your network to be opened to the Internet. You do not need to do port forwarding, and you do not need to setup a VPN ;)Printoid does not need to be opened on your device to receive the notifications from the plugin. The app can be killed and your phone can be sleeping, you will receive the notifications whatever happens!What CAN’T this plugin do for you?This plugin is not a plugin to control your 3D printer remotely. Please be nice, don’t yell at me because this was what you expected…May be this will be possible in the future, but for the moment it would require me too much work.This plugin only sends push to your device in order to show you notifications on your device for specific events.This way it will not update the information contained in the app (at least for the moment).SetupInstall the plugin via the bundled Plugin Manageror manually using this URL:https://github.com/anthonyst91/OctoPrint-Printoid/archive/master.zipConfigurationOnce the plugin has been installed:  Open the Settings panel of OctoPrint  Navigate to the Plugins section and select Printoid Notifications  Open the Printoid application on your phone, and connect it to your OctoPrint server  Wait few seconds for the app to be fully refreshed  From the OctoPrint interface, click on the Send test notification button  Check on your phone, you should receive your first notification!  The Printoid app is now paired with the Printoid plugin, you will receive notifications!",
"tags": ["printoid","bed temperature","print finished","Android","notifications"]
},

{
"id": "/plugins/smartpreheat",
"url": "/plugins/smartpreheat/",
"date": "2020-05-02 00:00:00 -0500",
"title": "Smart Preheat",
"description": "Parses GCode files and provides variables that can be accessed in GCode scripts. Reduces heatup time and allows for preheating before bed leveling.",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-SmartPreheat for more information.",
"tags": ["preheat","temperature"]
},

{
"id": "/plugins/terminalresponse",
"url": "/plugins/terminalresponse/",
"date": "2020-05-07 00:00:00 -0500",
"title": "Terminal Response",
"description": "Monitors terminal for a regular expression and allows you to respond with your own commands.",
"author": "Xiao Jin",
"content": "This plugin will monitor the terminal for regular expressions that you define. You can use parentheses to extract values from matches. You can then define commands to run in response to your regex matches and substitute the matches values to your liking.",
"tags": ["regex","regular","expressions","gcode","command","commands","terminal","monitor","send"]
}
]
}